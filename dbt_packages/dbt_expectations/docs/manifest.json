{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/manifest/v7.json", "dbt_version": "1.3.1", "generated_at": "2023-01-03T20:13:49.941739Z", "invocation_id": "bc0ba399-e9d4-4e8f-80f6-24bc6d3e6315", "env": {}, "project_id": "d9b3c2176db98e2e717cbb6a2ee41ffd", "user_id": null, "send_anonymous_usage_stats": false, "adapter_type": "postgres"}, "nodes": {"model.dbt_expectations_integration_tests.data_test": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt.type_float", "macro.dbt.type_string"], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_expectations_integration_tests", "database": null, "tags": [], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "postgres", "schema": "dbt_expectations_integration_tests", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "data_test"], "unique_id": "model.dbt_expectations_integration_tests.data_test", "raw_code": "select\n    1 as idx,\n    '2020-10-21' as date_col,\n    cast(0 as {{ dbt.type_float() }}) as col_numeric_a,\n    cast(1 as {{ dbt.type_float() }}) as col_numeric_b,\n    'a' as col_string_a,\n    'b' as col_string_b,\n    cast(null as {{ dbt.type_string() }}) as col_null,\n    cast(null as {{ dbt.type_string() }}) as col_null_2\n\nunion all\n\nselect\n    2 as idx,\n    '2020-10-22' as date_col,\n    1 as col_numeric_a,\n    0 as col_numeric_b,\n    'b' as col_string_a,\n    'ab' as col_string_b,\n    null as col_null,\n    null as col_null_2\n\nunion all\n\nselect\n    3 as idx,\n    '2020-10-23' as date_col,\n    0.5 as col_numeric_a,\n    0.5 as col_numeric_b,\n    'c' as col_string_a,\n    'abc' as col_string_b,\n    null as col_null,\n    null as col_null_2\n\nunion all\n\nselect\n    4 as idx,\n    '2020-10-23' as date_col,\n    0.5 as col_numeric_a,\n    0.5 as col_numeric_b,\n    'c' as col_string_a,\n    'abcd' as col_string_b,\n    null as col_null,\n    null as col_null_2", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "schema_tests/data_test.sql", "original_file_path": "models/schema_tests/data_test.sql", "name": "data_test", "alias": "data_test", "checksum": {"name": "sha256", "checksum": "756ca868c7ab1e7e8147f2bb6c9ffb1ba80b7b1019fd1d892bd79487d5ab8338"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {"idx": {"name": "idx", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "col_numeric_a": {"name": "col_numeric_a", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "col_string_a": {"name": "col_string_a", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "col_string_b": {"name": "col_string_b", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "col_null": {"name": "col_null", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_expectations_integration_tests://models/schema_tests/schema.yml", "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/data_test.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_expectations_integration_tests", "materialized": "table"}, "created_at": 1672451563.328657, "compiled_code": "select\n    1 as idx,\n    '2020-10-21' as date_col,\n    cast(0 as FLOAT) as col_numeric_a,\n    cast(1 as FLOAT) as col_numeric_b,\n    'a' as col_string_a,\n    'b' as col_string_b,\n    cast(null as TEXT) as col_null,\n    cast(null as TEXT) as col_null_2\n\nunion all\n\nselect\n    2 as idx,\n    '2020-10-22' as date_col,\n    1 as col_numeric_a,\n    0 as col_numeric_b,\n    'b' as col_string_a,\n    'ab' as col_string_b,\n    null as col_null,\n    null as col_null_2\n\nunion all\n\nselect\n    3 as idx,\n    '2020-10-23' as date_col,\n    0.5 as col_numeric_a,\n    0.5 as col_numeric_b,\n    'c' as col_string_a,\n    'abc' as col_string_b,\n    null as col_null,\n    null as col_null_2\n\nunion all\n\nselect\n    4 as idx,\n    '2020-10-23' as date_col,\n    0.5 as col_numeric_a,\n    0.5 as col_numeric_b,\n    'c' as col_string_a,\n    'abcd' as col_string_b,\n    null as col_null,\n    null as col_null_2", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "postgres.dbt_expectations_integration_tests.data_test"}, "model.dbt_expectations_integration_tests.series_4": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_date.generate_series"], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_expectations_integration_tests", "database": null, "tags": [], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "postgres", "schema": "dbt_expectations_integration_tests", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "series_4"], "unique_id": "model.dbt_expectations_integration_tests.series_4", "raw_code": "{{ dbt_date.generate_series(upper_bound=4) }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "schema_tests/series_4.sql", "original_file_path": "models/schema_tests/series_4.sql", "name": "series_4", "alias": "series_4", "checksum": {"name": "sha256", "checksum": "7085b4545e5ca02578e094b78c1ac7579bad3f291c26620323bf7717512dc048"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/series_4.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_expectations_integration_tests", "materialized": "table"}, "created_at": 1672451563.1124659, "compiled_code": "\n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 4\n    order by generated_number\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "postgres.dbt_expectations_integration_tests.series_4"}, "model.dbt_expectations_integration_tests.timeseries_data_grouped": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_expectations.type_datetime", "macro.dbt_expectations.type_timestamp", "macro.dbt.type_int", "macro.dbt_expectations.rand", "macro.dbt.type_float", "macro.dbt_expectations.log_natural"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_base", "model.dbt_expectations_integration_tests.series_4", "model.dbt_expectations_integration_tests.series_10"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_expectations_integration_tests", "database": null, "tags": [], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "postgres", "schema": "dbt_expectations_integration_tests", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "timeseries_data_grouped"], "unique_id": "model.dbt_expectations_integration_tests.timeseries_data_grouped", "raw_code": "with dates as (\n    select * from {{ ref('timeseries_base') }}\n),\ngroupings as (\n    select * from {{ ref('series_4') }}\n),\nrow_values as (\n    select * from {{ ref('series_10') }}\n),\nadd_row_values as (\n\n    select\n        cast(dates.date_day as {{ dbt_expectations.type_datetime() }}) as date_day,\n        cast(dates.date_day as {{ dbt_expectations.type_timestamp() }}) as date_timestamp,\n        cast(groupings.generated_number as {{ dbt.type_int() }}) as group_id,\n        cast(100 * abs({{ dbt_expectations.rand() }}) as {{ dbt.type_float() }}) as row_value\n    from\n        dates\n        cross join groupings\n        cross join row_values\n\n),\nadd_logs as (\n\n    select\n        *,\n        {{ dbt_expectations.log_natural('nullif(row_value, 0)') }} as row_value_log\n    from\n        add_row_values\n)\nselect *\nfrom\n    add_logs", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "schema_tests/timeseries_data_grouped.sql", "original_file_path": "models/schema_tests/timeseries_data_grouped.sql", "name": "timeseries_data_grouped", "alias": "timeseries_data_grouped", "checksum": {"name": "sha256", "checksum": "74c14b0985a3d48a71487556de97c70faf03c0467c0c4b52061ff6b77d06b20e"}, "tags": [], "refs": [["timeseries_base"], ["series_4"], ["series_10"]], "sources": [], "metrics": [], "description": "", "columns": {"row_value": {"name": "row_value", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_expectations_integration_tests://models/schema_tests/schema.yml", "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/timeseries_data_grouped.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_expectations_integration_tests", "materialized": "table"}, "created_at": 1672451563.330425, "compiled_code": "with dates as (\n    select * from postgres.dbt_expectations_integration_tests.timeseries_base\n),\ngroupings as (\n    select * from postgres.dbt_expectations_integration_tests.series_4\n),\nrow_values as (\n    select * from postgres.dbt_expectations_integration_tests.series_10\n),\nadd_row_values as (\n\n    select\n        cast(dates.date_day as timestamp without time zone) as date_day,\n        cast(dates.date_day as timestamp without time zone) as date_timestamp,\n        cast(groupings.generated_number as INT) as group_id,\n        cast(100 * abs(random()) as FLOAT) as row_value\n    from\n        dates\n        cross join groupings\n        cross join row_values\n\n),\nadd_logs as (\n\n    select\n        *,\n        ln(nullif(row_value, 0)) as row_value_log\n    from\n        add_row_values\n)\nselect *\nfrom\n    add_logs", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "postgres.dbt_expectations_integration_tests.timeseries_data_grouped"}, "model.dbt_expectations_integration_tests.timeseries_hourly": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_date.n_days_ago", "macro.dbt_date.tomorrow", "macro.dbt_date.date_spine"], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_expectations_integration_tests", "database": null, "tags": [], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "postgres", "schema": "dbt_expectations_integration_tests", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "timeseries_hourly"], "unique_id": "model.dbt_expectations_integration_tests.timeseries_hourly", "raw_code": "{{ dbt_date.date_spine('hour',\n        start_date=dbt_date.n_days_ago(10),\n        end_date=dbt_date.tomorrow()\n    )\n}}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "schema_tests/timeseries_hourly.sql", "original_file_path": "models/schema_tests/timeseries_hourly.sql", "name": "timeseries_hourly", "alias": "timeseries_hourly", "checksum": {"name": "sha256", "checksum": "45dd573409309121a3dbc510cd0fd0a03405eda6a45fce6b43419b854be8b44c"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/timeseries_hourly.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_expectations_integration_tests", "materialized": "table"}, "created_at": 1672451563.143629, "compiled_code": "\n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n     + \n    \n    p8.generated_number * power(2, 8)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 264.0\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n    cast(\n\n    cast(cast(\n    cast(now() as TIMESTAMP)\n        at time zone 'UTC' at time zone 'America/Los_Angeles' as TIMESTAMP\n) as date) + ((interval '1 day') * (-10))\n\n as date) + ((interval '1 hour') * (row_number() over (order by 1) - 1))\n\n\n    ) as date_hour\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_hour <= cast(\n\n    cast(cast(\n    cast(now() as TIMESTAMP)\n        at time zone 'UTC' at time zone 'America/Los_Angeles' as TIMESTAMP\n) as date) + ((interval '1 day') * (1))\n\n as date)\n\n)\n\nselect * from filtered\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "postgres.dbt_expectations_integration_tests.timeseries_hourly"}, "model.dbt_expectations_integration_tests.timeseries_base": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_date.get_base_dates"], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_expectations_integration_tests", "database": null, "tags": [], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "postgres", "schema": "dbt_expectations_integration_tests", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "timeseries_base"], "unique_id": "model.dbt_expectations_integration_tests.timeseries_base", "raw_code": "{{ dbt_date.get_base_dates(n_dateparts=366, datepart='day') }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "schema_tests/timeseries_base.sql", "original_file_path": "models/schema_tests/timeseries_base.sql", "name": "timeseries_base", "alias": "timeseries_base", "checksum": {"name": "sha256", "checksum": "30c069ae8cdf9621fcf3604fccba528dd9f7dc34de11a173c08d0534327a9033"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/timeseries_base.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_expectations_integration_tests", "materialized": "table"}, "created_at": 1672451563.22424, "compiled_code": "\n    with date_spine as\n(\n\n    \n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n     + \n    \n    p8.generated_number * power(2, 8)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 367\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n    \n\n    cast(cast(\n    cast(now() as TIMESTAMP)\n        at time zone 'UTC' at time zone 'America/Los_Angeles' as TIMESTAMP\n) as date) + ((interval '1 day') * (-366))\n\n + ((interval '1 day') * (row_number() over (order by 1) - 1))\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= cast(\n\n    cast(cast(\n    cast(now() as TIMESTAMP)\n        at time zone 'UTC' at time zone 'America/Los_Angeles' as TIMESTAMP\n) as date) + ((interval '1 day') * (1))\n\n as date)\n\n)\n\nselect * from filtered\n\n\n\n)\nselect\n    cast(d.date_day as TIMESTAMP) as date_day\nfrom\n    date_spine d\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "postgres.dbt_expectations_integration_tests.timeseries_base"}, "model.dbt_expectations_integration_tests.timeseries_data": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_expectations.type_datetime", "macro.dbt_expectations.type_timestamp", "macro.dbt_expectations.rand", "macro.dbt.type_float", "macro.dbt_expectations.log_natural"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_base"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_expectations_integration_tests", "database": null, "tags": [], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "postgres", "schema": "dbt_expectations_integration_tests", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "timeseries_data"], "unique_id": "model.dbt_expectations_integration_tests.timeseries_data", "raw_code": "with dates as (\n\n    select * from {{ ref('timeseries_base') }}\n\n),\nadd_row_values as (\n\n    select\n        cast(date_day as date) as date_day,\n        cast(date_day as {{ dbt_expectations.type_datetime() }}) as date_datetime,\n        cast(date_day as {{ dbt_expectations.type_timestamp() }}) as date_timestamp,\n        cast(100 * abs({{ dbt_expectations.rand() }}) as {{ dbt.type_float() }}) as row_value\n\n    from\n        dates\n\n),\nadd_logs as (\n\n    select\n        *,\n        {{ dbt_expectations.log_natural('nullif(row_value, 0)') }} as row_value_log\n    from\n        add_row_values\n)\nselect *\nfrom\n    add_logs", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "schema_tests/timeseries_data.sql", "original_file_path": "models/schema_tests/timeseries_data.sql", "name": "timeseries_data", "alias": "timeseries_data", "checksum": {"name": "sha256", "checksum": "36ce22251b22bd2f2d6275913c428cc78d1fd53714465c296aeb2e3db3c34d91"}, "tags": [], "refs": [["timeseries_base"]], "sources": [], "metrics": [], "description": "", "columns": {"date_day": {"name": "date_day", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "date_datetime": {"name": "date_datetime", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "date_timestamp": {"name": "date_timestamp", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "row_value": {"name": "row_value", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_expectations_integration_tests://models/schema_tests/schema.yml", "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/timeseries_data.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_expectations_integration_tests", "materialized": "table"}, "created_at": 1672451563.3205938, "compiled_code": "with dates as (\n\n    select * from postgres.dbt_expectations_integration_tests.timeseries_base\n\n),\nadd_row_values as (\n\n    select\n        cast(date_day as date) as date_day,\n        cast(date_day as timestamp without time zone) as date_datetime,\n        cast(date_day as timestamp without time zone) as date_timestamp,\n        cast(100 * abs(random()) as FLOAT) as row_value\n\n    from\n        dates\n\n),\nadd_logs as (\n\n    select\n        *,\n        ln(nullif(row_value, 0)) as row_value_log\n    from\n        add_row_values\n)\nselect *\nfrom\n    add_logs", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "postgres.dbt_expectations_integration_tests.timeseries_data"}, "model.dbt_expectations_integration_tests.window_function_test": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt.type_float"], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_expectations_integration_tests", "database": null, "tags": [], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "postgres", "schema": "dbt_expectations_integration_tests", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "window_function_test"], "unique_id": "model.dbt_expectations_integration_tests.window_function_test", "raw_code": "with data_example as (\n\n    select\n        1 as idx,\n        '2020-10-21' as date_col,\n        cast(0 as {{ dbt.type_float() }}) as col_numeric_a\n\n    union all\n\n    select\n        2 as idx,\n        '2020-10-22' as date_col,\n        1 as col_numeric_a\n\n    union all\n\n    select\n        2 as idx,\n        '2020-10-23' as date_col,\n        2 as col_numeric_a\n\n    union all\n\n    select\n        2 as idx,\n        '2020-10-24' as date_col,\n        1 as col_numeric_a\n\n    union all\n\n    select\n        3 as idx,\n        '2020-10-23' as date_col,\n        0.5 as col_numeric_a\n    union all\n\n    select\n        4 as idx,\n        '2020-10-23' as date_col,\n        0.5 as col_numeric_a\n\n)\nselect\n    *,\n    sum(col_numeric_a) over (partition by idx order by date_col) as rolling_sum_increasing,\n    sum(col_numeric_a) over (partition by idx order by date_col desc) as rolling_sum_decreasing\nfrom\n    data_example", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "schema_tests/window_function_test.sql", "original_file_path": "models/schema_tests/window_function_test.sql", "name": "window_function_test", "alias": "window_function_test", "checksum": {"name": "sha256", "checksum": "7c3b6180609947e8cb51e3c9b300978a615ee7e5ac9fc61b50c55805de669256"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {"rolling_sum_increasing": {"name": "rolling_sum_increasing", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "rolling_sum_decreasing": {"name": "rolling_sum_decreasing", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_expectations_integration_tests://models/schema_tests/schema.yml", "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/window_function_test.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_expectations_integration_tests", "materialized": "table"}, "created_at": 1672451563.332154, "compiled_code": "with data_example as (\n\n    select\n        1 as idx,\n        '2020-10-21' as date_col,\n        cast(0 as FLOAT) as col_numeric_a\n\n    union all\n\n    select\n        2 as idx,\n        '2020-10-22' as date_col,\n        1 as col_numeric_a\n\n    union all\n\n    select\n        2 as idx,\n        '2020-10-23' as date_col,\n        2 as col_numeric_a\n\n    union all\n\n    select\n        2 as idx,\n        '2020-10-24' as date_col,\n        1 as col_numeric_a\n\n    union all\n\n    select\n        3 as idx,\n        '2020-10-23' as date_col,\n        0.5 as col_numeric_a\n    union all\n\n    select\n        4 as idx,\n        '2020-10-23' as date_col,\n        0.5 as col_numeric_a\n\n)\nselect\n    *,\n    sum(col_numeric_a) over (partition by idx order by date_col) as rolling_sum_increasing,\n    sum(col_numeric_a) over (partition by idx order by date_col desc) as rolling_sum_decreasing\nfrom\n    data_example", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "postgres.dbt_expectations_integration_tests.window_function_test"}, "model.dbt_expectations_integration_tests.series_10": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_date.generate_series"], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_expectations_integration_tests", "database": null, "tags": [], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "postgres", "schema": "dbt_expectations_integration_tests", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "series_10"], "unique_id": "model.dbt_expectations_integration_tests.series_10", "raw_code": "{{ dbt_date.generate_series(upper_bound=10) }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "schema_tests/series_10.sql", "original_file_path": "models/schema_tests/series_10.sql", "name": "series_10", "alias": "series_10", "checksum": {"name": "sha256", "checksum": "54524432507e89e550c2bbbf08768de0fc6b19f4e65a44bb762b17d9945156cb"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/series_10.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_expectations_integration_tests", "materialized": "table"}, "created_at": 1672451563.2555661, "compiled_code": "\n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 10\n    order by generated_number\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "postgres.dbt_expectations_integration_tests.series_10"}, "model.dbt_expectations_integration_tests.timeseries_hourly_data_extended": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_expectations.type_datetime", "macro.dbt_expectations.rand", "macro.dbt.type_float", "macro.dbt_expectations.log_natural"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_hourly", "model.dbt_expectations_integration_tests.series_10"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_expectations_integration_tests", "database": null, "tags": [], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "postgres", "schema": "dbt_expectations_integration_tests", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "timeseries_hourly_data_extended"], "unique_id": "model.dbt_expectations_integration_tests.timeseries_hourly_data_extended", "raw_code": "with dates as (\n\n    select * from {{ ref('timeseries_hourly') }}\n\n),\nrow_values as (\n    select * from {{ ref('series_10') }}\n),\nadd_row_values as (\n\n    select\n        cast(dates.date_hour as {{ dbt_expectations.type_datetime() }}) as date_hour,\n        cast(100 * abs({{ dbt_expectations.rand() }}) as {{ dbt.type_float() }}) as row_value\n\n    from\n        dates\n        cross join row_values\n\n),\nadd_logs as (\n\n    select\n        *,\n        {{ dbt_expectations.log_natural('nullif(row_value, 0)') }} as row_value_log\n    from\n        add_row_values\n)\nselect *\nfrom\n    add_logs", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "schema_tests/timeseries_hourly_data_extended.sql", "original_file_path": "models/schema_tests/timeseries_hourly_data_extended.sql", "name": "timeseries_hourly_data_extended", "alias": "timeseries_hourly_data_extended", "checksum": {"name": "sha256", "checksum": "a7de43dbdca2dea69f34ac0e4a22259945b13f21dcfd081ba638f660ddceca15"}, "tags": [], "refs": [["timeseries_hourly"], ["series_10"]], "sources": [], "metrics": [], "description": "", "columns": {"date_hour": {"name": "date_hour", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "row_value_log": {"name": "row_value_log", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_expectations_integration_tests://models/schema_tests/schema.yml", "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/timeseries_hourly_data_extended.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_expectations_integration_tests", "materialized": "table"}, "created_at": 1672451563.324202, "compiled_code": "with dates as (\n\n    select * from postgres.dbt_expectations_integration_tests.timeseries_hourly\n\n),\nrow_values as (\n    select * from postgres.dbt_expectations_integration_tests.series_10\n),\nadd_row_values as (\n\n    select\n        cast(dates.date_hour as timestamp without time zone) as date_hour,\n        cast(100 * abs(random()) as FLOAT) as row_value\n\n    from\n        dates\n        cross join row_values\n\n),\nadd_logs as (\n\n    select\n        *,\n        ln(nullif(row_value, 0)) as row_value_log\n    from\n        add_row_values\n)\nselect *\nfrom\n    add_logs", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "postgres.dbt_expectations_integration_tests.timeseries_hourly_data_extended"}, "model.dbt_expectations_integration_tests.data_text": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_expectations_integration_tests", "database": null, "tags": [], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "postgres", "schema": "dbt_expectations_integration_tests", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "data_text"], "unique_id": "model.dbt_expectations_integration_tests.data_text", "raw_code": "select\n    'ab@gmail.com' as email_address,\n    '91001' as postal_code_5,\n    '91001-123' as postal_code_5_3\n\nunion all\n\nselect\n    'ab@mail.com' as email_address,\n    '90210' as postal_code_5,\n    '90210-123' as postal_code_5_3\n\nunion all\n\nselect\n    'abc@gmail.com' as email_address,\n    '90026' as postal_code_5,\n    '90026-123' as postal_code_5_3\n\nunion all\n\nselect\n    'abc.com@gmail.com' as email_address,\n    '09876' as postal_code_5,\n    '09876-023' as postal_code_5_3", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "schema_tests/data_text.sql", "original_file_path": "models/schema_tests/data_text.sql", "name": "data_text", "alias": "data_text", "checksum": {"name": "sha256", "checksum": "e35886d8c43d4b49707c76c4d203599d4becd2c34474075b50c6cd89d3d96040"}, "tags": [], "refs": [], "sources": [], "metrics": [], "description": "", "columns": {"email_address": {"name": "email_address", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "postal_code_5": {"name": "postal_code_5", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "postal_code_5_3": {"name": "postal_code_5_3", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_expectations_integration_tests://models/schema_tests/schema.yml", "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/data_text.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_expectations_integration_tests", "materialized": "table"}, "created_at": 1672451563.3171551, "compiled_code": "select\n    'ab@gmail.com' as email_address,\n    '91001' as postal_code_5,\n    '91001-123' as postal_code_5_3\n\nunion all\n\nselect\n    'ab@mail.com' as email_address,\n    '90210' as postal_code_5,\n    '90210-123' as postal_code_5_3\n\nunion all\n\nselect\n    'abc@gmail.com' as email_address,\n    '90026' as postal_code_5,\n    '90026-123' as postal_code_5_3\n\nunion all\n\nselect\n    'abc.com@gmail.com' as email_address,\n    '09876' as postal_code_5,\n    '09876-023' as postal_code_5_3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "postgres.dbt_expectations_integration_tests.data_text"}, "model.dbt_expectations_integration_tests.data_test_factored": {"compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.dbt_expectations_integration_tests.data_test", "model.dbt_expectations_integration_tests.data_test"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_expectations_integration_tests", "database": null, "tags": [], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "postgres", "schema": "dbt_expectations_integration_tests", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "data_test_factored"], "unique_id": "model.dbt_expectations_integration_tests.data_test_factored", "raw_code": "select\n    1 as factor,\n    *\nfrom\n    {{ ref(\"data_test\") }}\n\nunion all\n\nselect\n    2 as factor,\n    *\nfrom\n    {{ ref(\"data_test\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "schema_tests/data_test_factored.sql", "original_file_path": "models/schema_tests/data_test_factored.sql", "name": "data_test_factored", "alias": "data_test_factored", "checksum": {"name": "sha256", "checksum": "b872a951a16587ae9d7117cbbff5ab4f983244c9ff03be2126f2a3e3ad53d27d"}, "tags": [], "refs": [["data_test"], ["data_test"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_expectations_integration_tests://models/schema_tests/schema.yml", "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/data_test_factored.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_expectations_integration_tests", "materialized": "table"}, "created_at": 1672451563.329229, "compiled_code": "select\n    1 as factor,\n    *\nfrom\n    postgres.dbt_expectations_integration_tests.data_test\n\nunion all\n\nselect\n    2 as factor,\n    *\nfrom\n    postgres.dbt_expectations_integration_tests.data_test", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "postgres.dbt_expectations_integration_tests.data_test_factored"}, "model.dbt_expectations_integration_tests.timeseries_data_extended": {"compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_expectations.type_datetime", "macro.dbt_expectations.rand", "macro.dbt.type_float", "macro.dbt_expectations.log_natural"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_base", "model.dbt_expectations_integration_tests.series_10"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_expectations_integration_tests", "database": null, "tags": [], "meta": {}, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "post-hook": [], "pre-hook": []}, "database": "postgres", "schema": "dbt_expectations_integration_tests", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "timeseries_data_extended"], "unique_id": "model.dbt_expectations_integration_tests.timeseries_data_extended", "raw_code": "with dates as (\n    select * from {{ ref('timeseries_base') }}\n),\nrow_values as (\n    select * from {{ ref('series_10') }}\n),\nadd_row_values as (\n\n    select\n        cast(dates.date_day as {{ dbt_expectations.type_datetime() }}) as date_day,\n        cast(100 * abs({{ dbt_expectations.rand() }}) as {{ dbt.type_float() }}) as row_value\n\n    from\n        dates\n        cross join row_values\n\n),\nadd_logs as (\n\n    select\n        *,\n        {{ dbt_expectations.log_natural('nullif(row_value, 0)') }} as row_value_log\n    from\n        add_row_values\n)\nselect *\nfrom\n    add_logs", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "schema_tests/timeseries_data_extended.sql", "original_file_path": "models/schema_tests/timeseries_data_extended.sql", "name": "timeseries_data_extended", "alias": "timeseries_data_extended", "checksum": {"name": "sha256", "checksum": "e4f754e7fddf0d19a9c8c23b39243b54d54f195226fd7e67de9dcbc870e2b54d"}, "tags": [], "refs": [["timeseries_base"], ["series_10"]], "sources": [], "metrics": [], "description": "", "columns": {"date_day": {"name": "date_day", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "row_value": {"name": "row_value", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "row_value_log": {"name": "row_value_log", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "dbt_expectations_integration_tests://models/schema_tests/schema.yml", "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/timeseries_data_extended.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_expectations_integration_tests", "materialized": "table"}, "created_at": 1672451563.322686, "compiled_code": "with dates as (\n    select * from postgres.dbt_expectations_integration_tests.timeseries_base\n),\nrow_values as (\n    select * from postgres.dbt_expectations_integration_tests.series_10\n),\nadd_row_values as (\n\n    select\n        cast(dates.date_day as timestamp without time zone) as date_day,\n        cast(100 * abs(random()) as FLOAT) as row_value\n\n    from\n        dates\n        cross join row_values\n\n),\nadd_logs as (\n\n    select\n        *,\n        ln(nullif(row_value, 0)) as row_value_log\n    from\n        add_row_values\n)\nselect *\nfrom\n    add_logs", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "postgres.dbt_expectations_integration_tests.timeseries_data_extended"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_match_regex_data_text_email_address___.77c66b57c2": {"test_metadata": {"name": "expect_column_values_to_match_regex", "kwargs": {"regex": "@[^.]*", "column_name": "email_address", "model": "{{ get_where_subquery(ref('data_text')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_match_regex", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.data_text"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_50fe8158b4b65c99f8593f7471f8d775", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_match_regex_data_text_email_address___"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_match_regex_data_text_email_address___.77c66b57c2", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_match_regex(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_50fe8158b4b65c99f8593f7471f8d775\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_50fe8158b4b65c99f8593f7471f8d775.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_match_regex_data_text_email_address___", "alias": "dbt_expectations_expect_column_50fe8158b4b65c99f8593f7471f8d775", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["data_text"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_50fe8158b4b65c99f8593f7471f8d775.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_50fe8158b4b65c99f8593f7471f8d775"}, "created_at": 1672451563.34097, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n\n    \narray_length((select regexp_matches(email_address, '@[^.]*')), 1)\n\n\n > 0\n as expression\n\n\n    from postgres.dbt_expectations_integration_tests.data_text\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "email_address", "file_key_name": "models.data_text"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_not_match_regex_data_text_email_address___.ebe7762c32": {"test_metadata": {"name": "expect_column_values_to_not_match_regex", "kwargs": {"regex": "&[^.]*", "column_name": "email_address", "model": "{{ get_where_subquery(ref('data_text')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_match_regex", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.data_text"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_b4b9840924c5c3e876fc0ade7e089cd3", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_not_match_regex_data_text_email_address___"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_not_match_regex_data_text_email_address___.ebe7762c32", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_not_match_regex(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_b4b9840924c5c3e876fc0ade7e089cd3\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_b4b9840924c5c3e876fc0ade7e089cd3.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_not_match_regex_data_text_email_address___", "alias": "dbt_expectations_expect_column_b4b9840924c5c3e876fc0ade7e089cd3", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["data_text"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_b4b9840924c5c3e876fc0ade7e089cd3.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_b4b9840924c5c3e876fc0ade7e089cd3"}, "created_at": 1672451563.3606122, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n\n    \narray_length((select regexp_matches(email_address, '&[^.]*')), 1)\n\n\n = 0\n as expression\n\n\n    from postgres.dbt_expectations_integration_tests.data_text\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "email_address", "file_key_name": "models.data_text"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_match_regex_list_data_text_email_address______.cf139f0062": {"test_metadata": {"name": "expect_column_values_to_match_regex_list", "kwargs": {"regex_list": ["@[^.]*", "&[^.]*"], "column_name": "email_address", "model": "{{ get_where_subquery(ref('data_text')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_match_regex_list", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.data_text"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_f674e5dfe4d52219da8040028b6cdb19", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_match_regex_list_data_text_email_address______"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_match_regex_list_data_text_email_address______.cf139f0062", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_match_regex_list(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_f674e5dfe4d52219da8040028b6cdb19\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_f674e5dfe4d52219da8040028b6cdb19.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_match_regex_list_data_text_email_address______", "alias": "dbt_expectations_expect_column_f674e5dfe4d52219da8040028b6cdb19", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["data_text"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_f674e5dfe4d52219da8040028b6cdb19.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_f674e5dfe4d52219da8040028b6cdb19"}, "created_at": 1672451563.367601, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n    \n    \n\n    \narray_length((select regexp_matches(email_address, '@[^.]*')), 1)\n\n\n > 0\n     or \n    \n    \n\n    \narray_length((select regexp_matches(email_address, '&[^.]*')), 1)\n\n\n > 0\n as expression\n\n\n    from postgres.dbt_expectations_integration_tests.data_text\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "email_address", "file_key_name": "models.data_text"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_not_match_regex_list_data_text_email_address______.4fdf4a17ec": {"test_metadata": {"name": "expect_column_values_to_not_match_regex_list", "kwargs": {"regex_list": ["@[^.]*", "&[^.]*"], "column_name": "email_address", "model": "{{ get_where_subquery(ref('data_text')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_match_regex_list", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.data_text"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_70f3f57594dd0b48f023ff721af3543d", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_not_match_regex_list_data_text_email_address______"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_not_match_regex_list_data_text_email_address______.4fdf4a17ec", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_not_match_regex_list(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_70f3f57594dd0b48f023ff721af3543d\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_70f3f57594dd0b48f023ff721af3543d.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_not_match_regex_list_data_text_email_address______", "alias": "dbt_expectations_expect_column_70f3f57594dd0b48f023ff721af3543d", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["data_text"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_70f3f57594dd0b48f023ff721af3543d.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_70f3f57594dd0b48f023ff721af3543d"}, "created_at": 1672451563.3758159, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n\n\n    \narray_length((select regexp_matches(email_address, '@[^.]*')), 1)\n\n\n = 0\n or \n\n\n\n    \narray_length((select regexp_matches(email_address, '&[^.]*')), 1)\n\n\n = 0\n as expression\n\n\n    from postgres.dbt_expectations_integration_tests.data_text\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "email_address", "file_key_name": "models.data_text"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_match_like_pattern_data_text_email_address___.68d9ba4c6f": {"test_metadata": {"name": "expect_column_values_to_match_like_pattern", "kwargs": {"like_pattern": "%@%", "column_name": "email_address", "model": "{{ get_where_subquery(ref('data_text')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_match_like_pattern", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.data_text"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_4429ac830680fbacf3f79efc3b9e563a", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_match_like_pattern_data_text_email_address___"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_match_like_pattern_data_text_email_address___.68d9ba4c6f", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_match_like_pattern(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_4429ac830680fbacf3f79efc3b9e563a\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_4429ac830680fbacf3f79efc3b9e563a.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_match_like_pattern_data_text_email_address___", "alias": "dbt_expectations_expect_column_4429ac830680fbacf3f79efc3b9e563a", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["data_text"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_4429ac830680fbacf3f79efc3b9e563a.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_4429ac830680fbacf3f79efc3b9e563a"}, "created_at": 1672451563.383828, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \nemail_address  like '%@%'\n as expression\n\n\n    from postgres.dbt_expectations_integration_tests.data_text\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "email_address", "file_key_name": "models.data_text"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_not_match_like_pattern_data_text_email_address___.f4ec123a75": {"test_metadata": {"name": "expect_column_values_to_not_match_like_pattern", "kwargs": {"like_pattern": "%&%", "column_name": "email_address", "model": "{{ get_where_subquery(ref('data_text')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_match_like_pattern", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.data_text"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_9ebeef47a6253273bb16ea1fb555f3d4", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_not_match_like_pattern_data_text_email_address___"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_not_match_like_pattern_data_text_email_address___.f4ec123a75", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_not_match_like_pattern(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_9ebeef47a6253273bb16ea1fb555f3d4\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_9ebeef47a6253273bb16ea1fb555f3d4.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_not_match_like_pattern_data_text_email_address___", "alias": "dbt_expectations_expect_column_9ebeef47a6253273bb16ea1fb555f3d4", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["data_text"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_9ebeef47a6253273bb16ea1fb555f3d4.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_9ebeef47a6253273bb16ea1fb555f3d4"}, "created_at": 1672451563.39149, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \nemail_address not like '%&%'\n as expression\n\n\n    from postgres.dbt_expectations_integration_tests.data_text\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "email_address", "file_key_name": "models.data_text"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_match_like_pattern_list_data_text_email_address______.d7494ff111": {"test_metadata": {"name": "expect_column_values_to_match_like_pattern_list", "kwargs": {"like_pattern_list": ["%@%", "%&%"], "column_name": "email_address", "model": "{{ get_where_subquery(ref('data_text')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_match_like_pattern_list", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.data_text"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_a46176829897335ef5b484ce3e7639c6", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_match_like_pattern_list_data_text_email_address______"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_match_like_pattern_list_data_text_email_address______.d7494ff111", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_match_like_pattern_list(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_a46176829897335ef5b484ce3e7639c6\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_a46176829897335ef5b484ce3e7639c6.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_match_like_pattern_list_data_text_email_address______", "alias": "dbt_expectations_expect_column_a46176829897335ef5b484ce3e7639c6", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["data_text"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_a46176829897335ef5b484ce3e7639c6.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_a46176829897335ef5b484ce3e7639c6"}, "created_at": 1672451563.397869, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n    \n    \nemail_address  like '%@%'\n\n     or \n    \n    \nemail_address  like '%&%'\n\n as expression\n\n\n    from postgres.dbt_expectations_integration_tests.data_text\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "email_address", "file_key_name": "models.data_text"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_not_match_like_pattern_list_data_text_email_address______.22136d26c7": {"test_metadata": {"name": "expect_column_values_to_not_match_like_pattern_list", "kwargs": {"like_pattern_list": ["%@%", "%&%"], "column_name": "email_address", "model": "{{ get_where_subquery(ref('data_text')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_match_like_pattern_list", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.data_text"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_089145ee8260c6403493de6d16d18f6d", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_not_match_like_pattern_list_data_text_email_address______"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_not_match_like_pattern_list_data_text_email_address______.22136d26c7", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_not_match_like_pattern_list(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_089145ee8260c6403493de6d16d18f6d\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_089145ee8260c6403493de6d16d18f6d.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_not_match_like_pattern_list_data_text_email_address______", "alias": "dbt_expectations_expect_column_089145ee8260c6403493de6d16d18f6d", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["data_text"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_089145ee8260c6403493de6d16d18f6d.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_089145ee8260c6403493de6d16d18f6d"}, "created_at": 1672451563.406493, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n    \n    \nemail_address not like '%@%'\n\n     or \n    \n    \nemail_address not like '%&%'\n\n as expression\n\n\n    from postgres.dbt_expectations_integration_tests.data_text\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "email_address", "file_key_name": "models.data_text"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_match_regex_data_text_postal_code_5__True___d_5_.3607321629": {"test_metadata": {"name": "expect_column_values_to_match_regex", "kwargs": {"regex": "^\\d{5}", "is_raw": true, "column_name": "postal_code_5", "model": "{{ get_where_subquery(ref('data_text')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_match_regex", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.data_text"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_97405ea82b90ee82ea09b3eb980cae88", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_match_regex_data_text_postal_code_5__True___d_5_"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_match_regex_data_text_postal_code_5__True___d_5_.3607321629", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_match_regex(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_97405ea82b90ee82ea09b3eb980cae88\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_97405ea82b90ee82ea09b3eb980cae88.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_match_regex_data_text_postal_code_5__True___d_5_", "alias": "dbt_expectations_expect_column_97405ea82b90ee82ea09b3eb980cae88", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["data_text"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_97405ea82b90ee82ea09b3eb980cae88.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_97405ea82b90ee82ea09b3eb980cae88"}, "created_at": 1672451563.414909, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n\n    \narray_length((select regexp_matches(postal_code_5, '^\\d{5}')), 1)\n\n\n > 0\n as expression\n\n\n    from postgres.dbt_expectations_integration_tests.data_text\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "postal_code_5", "file_key_name": "models.data_text"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_not_match_regex_data_text_postal_code_5__True___.08ed586381": {"test_metadata": {"name": "expect_column_values_to_not_match_regex", "kwargs": {"regex": "@[^.]*", "is_raw": true, "column_name": "postal_code_5", "model": "{{ get_where_subquery(ref('data_text')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_match_regex", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.data_text"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_ff6819a71e5be42fff8062e187dbe381", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_not_match_regex_data_text_postal_code_5__True___"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_not_match_regex_data_text_postal_code_5__True___.08ed586381", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_not_match_regex(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_ff6819a71e5be42fff8062e187dbe381\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_ff6819a71e5be42fff8062e187dbe381.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_not_match_regex_data_text_postal_code_5__True___", "alias": "dbt_expectations_expect_column_ff6819a71e5be42fff8062e187dbe381", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["data_text"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_ff6819a71e5be42fff8062e187dbe381.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_ff6819a71e5be42fff8062e187dbe381"}, "created_at": 1672451563.420496, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n\n    \narray_length((select regexp_matches(postal_code_5, '@[^.]*')), 1)\n\n\n = 0\n as expression\n\n\n    from postgres.dbt_expectations_integration_tests.data_text\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "postal_code_5", "file_key_name": "models.data_text"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_match_regex_list_data_text_postal_code_5__True___d_5_.789d2e2687": {"test_metadata": {"name": "expect_column_values_to_match_regex_list", "kwargs": {"regex_list": ["^\\d{5}"], "is_raw": true, "column_name": "postal_code_5", "model": "{{ get_where_subquery(ref('data_text')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_match_regex_list", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.data_text"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_55f86c05368f6a838bd463451c2e2f1b", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_match_regex_list_data_text_postal_code_5__True___d_5_"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_match_regex_list_data_text_postal_code_5__True___d_5_.789d2e2687", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_match_regex_list(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_55f86c05368f6a838bd463451c2e2f1b\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_55f86c05368f6a838bd463451c2e2f1b.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_match_regex_list_data_text_postal_code_5__True___d_5_", "alias": "dbt_expectations_expect_column_55f86c05368f6a838bd463451c2e2f1b", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["data_text"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_55f86c05368f6a838bd463451c2e2f1b.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_55f86c05368f6a838bd463451c2e2f1b"}, "created_at": 1672451563.4250371, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n    \n    \n\n    \narray_length((select regexp_matches(postal_code_5, '^\\d{5}')), 1)\n\n\n > 0\n as expression\n\n\n    from postgres.dbt_expectations_integration_tests.data_text\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "postal_code_5", "file_key_name": "models.data_text"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_not_match_regex_list_data_text_postal_code_5__True___.8b98c304b7": {"test_metadata": {"name": "expect_column_values_to_not_match_regex_list", "kwargs": {"regex_list": ["@[^.]*"], "is_raw": true, "column_name": "postal_code_5", "model": "{{ get_where_subquery(ref('data_text')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_match_regex_list", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.data_text"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_31fcf68ec64f473e73298d1a00c6925c", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_not_match_regex_list_data_text_postal_code_5__True___"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_not_match_regex_list_data_text_postal_code_5__True___.8b98c304b7", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_not_match_regex_list(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_31fcf68ec64f473e73298d1a00c6925c\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_31fcf68ec64f473e73298d1a00c6925c.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_not_match_regex_list_data_text_postal_code_5__True___", "alias": "dbt_expectations_expect_column_31fcf68ec64f473e73298d1a00c6925c", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["data_text"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_31fcf68ec64f473e73298d1a00c6925c.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_31fcf68ec64f473e73298d1a00c6925c"}, "created_at": 1672451563.4296808, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n\n\n    \narray_length((select regexp_matches(postal_code_5, '@[^.]*')), 1)\n\n\n = 0\n as expression\n\n\n    from postgres.dbt_expectations_integration_tests.data_text\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "postal_code_5", "file_key_name": "models.data_text"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_match_regex_data_text_postal_code_5_3__True___d_5_d_3_.119d58affd": {"test_metadata": {"name": "expect_column_values_to_match_regex", "kwargs": {"regex": "^\\d{5}-\\d{3}", "is_raw": true, "column_name": "postal_code_5_3", "model": "{{ get_where_subquery(ref('data_text')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_match_regex", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.data_text"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_0def7c7e53e60338bc240595b21be614", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_match_regex_data_text_postal_code_5_3__True___d_5_d_3_"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_match_regex_data_text_postal_code_5_3__True___d_5_d_3_.119d58affd", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_match_regex(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_0def7c7e53e60338bc240595b21be614\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_0def7c7e53e60338bc240595b21be614.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_match_regex_data_text_postal_code_5_3__True___d_5_d_3_", "alias": "dbt_expectations_expect_column_0def7c7e53e60338bc240595b21be614", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["data_text"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_0def7c7e53e60338bc240595b21be614.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_0def7c7e53e60338bc240595b21be614"}, "created_at": 1672451563.4342039, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n\n    \narray_length((select regexp_matches(postal_code_5_3, '^\\d{5}-\\d{3}')), 1)\n\n\n > 0\n as expression\n\n\n    from postgres.dbt_expectations_integration_tests.data_text\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "postal_code_5_3", "file_key_name": "models.data_text"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_row_values_to_have_recent_data_timeseries_data_date_day__day__1.9222375acc": {"test_metadata": {"name": "expect_row_values_to_have_recent_data", "kwargs": {"datepart": "day", "interval": 1, "column_name": "date_day", "model": "{{ get_where_subquery(ref('timeseries_data')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_row_values_to_have_recent_data", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_data"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_row_va_23aaf8443c8d15f6e320bec0ef1f3aaa", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_row_values_to_have_recent_data_timeseries_data_date_day__day__1"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_row_values_to_have_recent_data_timeseries_data_date_day__day__1.9222375acc", "raw_code": "{{ dbt_expectations.test_expect_row_values_to_have_recent_data(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_row_va_23aaf8443c8d15f6e320bec0ef1f3aaa\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_row_va_23aaf8443c8d15f6e320bec0ef1f3aaa.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_row_values_to_have_recent_data_timeseries_data_date_day__day__1", "alias": "dbt_expectations_expect_row_va_23aaf8443c8d15f6e320bec0ef1f3aaa", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_data"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_row_va_23aaf8443c8d15f6e320bec0ef1f3aaa.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_row_va_23aaf8443c8d15f6e320bec0ef1f3aaa"}, "created_at": 1672451563.4401321, "compiled_code": "\n\n with max_recency as (\n\n    select max(cast(date_day as timestamp without time zone)) as max_timestamp\n    from\n        postgres.dbt_expectations_integration_tests.timeseries_data\n    where\n        -- to exclude erroneous future dates\n        cast(date_day as timestamp without time zone) <= cast(\n    cast(now() as TIMESTAMP)\n        at time zone 'UTC' at time zone 'America/Los_Angeles' as TIMESTAMP\n)\n        \n)\nselect\n    *\nfrom\n    max_recency\nwhere\n    -- if the row_condition excludes all rows, we need to compare against a default date\n    -- to avoid false negatives\n    coalesce(max_timestamp, cast('1970-01-01' as timestamp without time zone))\n        <\n        cast(\n\n    cast(\n    cast(now() as TIMESTAMP)\n        at time zone 'UTC' at time zone 'America/Los_Angeles' as TIMESTAMP\n) + ((interval '1 day') * (-1))\n\n as timestamp without time zone)\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "date_day", "file_key_name": "models.timeseries_data"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_in_type_list_timeseries_data_date_day__date___dbt_expectations_type_timestamp_.79af0ea1f3": {"test_metadata": {"name": "expect_column_values_to_be_in_type_list", "kwargs": {"column_type_list": ["date", "{{ dbt_expectations.type_timestamp() }}"], "column_name": "date_day", "model": "{{ get_where_subquery(ref('timeseries_data')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_in_type_list", "macro.dbt.get_where_subquery", "macro.dbt_expectations.type_timestamp"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_data"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_837727f0f2d148961efd320d1e7831af", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_be_in_type_list_timeseries_data_date_day__date___dbt_expectations_type_timestamp_"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_in_type_list_timeseries_data_date_day__date___dbt_expectations_type_timestamp_.79af0ea1f3", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_be_in_type_list(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_837727f0f2d148961efd320d1e7831af\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_837727f0f2d148961efd320d1e7831af.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_be_in_type_list_timeseries_data_date_day__date___dbt_expectations_type_timestamp_", "alias": "dbt_expectations_expect_column_837727f0f2d148961efd320d1e7831af", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_data"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_837727f0f2d148961efd320d1e7831af.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_837727f0f2d148961efd320d1e7831af"}, "created_at": 1672451563.451668, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('DATE_DAY' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATE_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP WITHOUT TIME ZONE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATE_TIMESTAMP' as TEXT) as relation_column,\n            cast('TIMESTAMP WITHOUT TIME ZONE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ROW_VALUE' as TEXT) as relation_column,\n            cast('DOUBLE PRECISION' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ROW_VALUE_LOG' as TEXT) as relation_column,\n            cast('DOUBLE PRECISION' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'DATE_DAY'\n            and\n            relation_column_type not in ('DATE', 'TIMESTAMP WITHOUT TIME ZONE')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "date_day", "file_key_name": "models.timeseries_data"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_increasing_timeseries_data_date_day__date_day.b349b0a845": {"test_metadata": {"name": "expect_column_values_to_be_increasing", "kwargs": {"sort_column": "date_day", "column_name": "date_day", "model": "{{ get_where_subquery(ref('timeseries_data')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_increasing", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_data"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_915dfb9e2254099b3af9caf4141b33a5", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_be_increasing_timeseries_data_date_day__date_day"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_increasing_timeseries_data_date_day__date_day.b349b0a845", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_be_increasing(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_915dfb9e2254099b3af9caf4141b33a5\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_915dfb9e2254099b3af9caf4141b33a5.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_be_increasing_timeseries_data_date_day__date_day", "alias": "dbt_expectations_expect_column_915dfb9e2254099b3af9caf4141b33a5", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_data"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_915dfb9e2254099b3af9caf4141b33a5.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_915dfb9e2254099b3af9caf4141b33a5"}, "created_at": 1672451563.460024, "compiled_code": "with all_values as (\n\n    select\n        date_day as sort_column,\n        date_day as value_field\n    from postgres.dbt_expectations_integration_tests.timeseries_data\n    \n\n),\nadd_lag_values as (\n\n    select\n        sort_column,\n        value_field,\n        lag(value_field) over(order by sort_column) as value_field_lag\n    from\n        all_values\n\n),\nvalidation_errors as (\n    select\n        *\n    from\n        add_lag_values\n    where\n        value_field_lag is not null\n        and\n        not (value_field > value_field_lag)\n\n)\nselect *\nfrom validation_errors\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "date_day", "file_key_name": "models.timeseries_data"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_distinct_count_to_equal_other_table_timeseries_data_date_day__ref_timeseries_data_extended_.6fd6f4ea6b": {"test_metadata": {"name": "expect_column_distinct_count_to_equal_other_table", "kwargs": {"compare_model": "ref(\"timeseries_data_extended\")", "column_name": "date_day", "model": "{{ get_where_subquery(ref('timeseries_data')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_distinct_count_to_equal_other_table", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_data_extended", "model.dbt_expectations_integration_tests.timeseries_data"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_3edaa1ecaf7bbf66cd8c73b0912ce25c", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_distinct_count_to_equal_other_table_timeseries_data_date_day__ref_timeseries_data_extended_"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_distinct_count_to_equal_other_table_timeseries_data_date_day__ref_timeseries_data_extended_.6fd6f4ea6b", "raw_code": "{{ dbt_expectations.test_expect_column_distinct_count_to_equal_other_table(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_3edaa1ecaf7bbf66cd8c73b0912ce25c\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_3edaa1ecaf7bbf66cd8c73b0912ce25c.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_distinct_count_to_equal_other_table_timeseries_data_date_day__ref_timeseries_data_extended_", "alias": "dbt_expectations_expect_column_3edaa1ecaf7bbf66cd8c73b0912ce25c", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_data_extended"], ["timeseries_data"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_3edaa1ecaf7bbf66cd8c73b0912ce25c.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_3edaa1ecaf7bbf66cd8c73b0912ce25c"}, "created_at": 1672451563.468467, "compiled_code": "\n    with a as (\n        \n    select\n        \n        count(distinct date_day) as expression\n    from\n        postgres.dbt_expectations_integration_tests.timeseries_data\n    \n\n    ),\n    b as (\n        \n    select\n        \n        count(distinct date_day) as expression\n    from\n        postgres.dbt_expectations_integration_tests.timeseries_data_extended\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "date_day", "file_key_name": "models.timeseries_data"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_row_values_to_have_recent_data_timeseries_data_date_datetime__day__1.29c33143be": {"test_metadata": {"name": "expect_row_values_to_have_recent_data", "kwargs": {"datepart": "day", "interval": 1, "column_name": "date_datetime", "model": "{{ get_where_subquery(ref('timeseries_data')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_row_values_to_have_recent_data", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_data"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_row_va_aa49d620b84b67b5dab2fba206867d54", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_row_values_to_have_recent_data_timeseries_data_date_datetime__day__1"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_row_values_to_have_recent_data_timeseries_data_date_datetime__day__1.29c33143be", "raw_code": "{{ dbt_expectations.test_expect_row_values_to_have_recent_data(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_row_va_aa49d620b84b67b5dab2fba206867d54\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_row_va_aa49d620b84b67b5dab2fba206867d54.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_row_values_to_have_recent_data_timeseries_data_date_datetime__day__1", "alias": "dbt_expectations_expect_row_va_aa49d620b84b67b5dab2fba206867d54", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_data"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_row_va_aa49d620b84b67b5dab2fba206867d54.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_row_va_aa49d620b84b67b5dab2fba206867d54"}, "created_at": 1672451563.488796, "compiled_code": "\n\n with max_recency as (\n\n    select max(cast(date_datetime as timestamp without time zone)) as max_timestamp\n    from\n        postgres.dbt_expectations_integration_tests.timeseries_data\n    where\n        -- to exclude erroneous future dates\n        cast(date_datetime as timestamp without time zone) <= cast(\n    cast(now() as TIMESTAMP)\n        at time zone 'UTC' at time zone 'America/Los_Angeles' as TIMESTAMP\n)\n        \n)\nselect\n    *\nfrom\n    max_recency\nwhere\n    -- if the row_condition excludes all rows, we need to compare against a default date\n    -- to avoid false negatives\n    coalesce(max_timestamp, cast('1970-01-01' as timestamp without time zone))\n        <\n        cast(\n\n    cast(\n    cast(now() as TIMESTAMP)\n        at time zone 'UTC' at time zone 'America/Los_Angeles' as TIMESTAMP\n) + ((interval '1 day') * (-1))\n\n as timestamp without time zone)\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "date_datetime", "file_key_name": "models.timeseries_data"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_in_type_list_timeseries_data_date_datetime__date___dbt_expectations_type_datetime_.a431470019": {"test_metadata": {"name": "expect_column_values_to_be_in_type_list", "kwargs": {"column_type_list": ["date", "{{ dbt_expectations.type_datetime() }}"], "column_name": "date_datetime", "model": "{{ get_where_subquery(ref('timeseries_data')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_in_type_list", "macro.dbt.get_where_subquery", "macro.dbt_expectations.type_datetime"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_data"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_1cfed4d5a72647b089bb8ff513269498", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_be_in_type_list_timeseries_data_date_datetime__date___dbt_expectations_type_datetime_"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_in_type_list_timeseries_data_date_datetime__date___dbt_expectations_type_datetime_.a431470019", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_be_in_type_list(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_1cfed4d5a72647b089bb8ff513269498\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_1cfed4d5a72647b089bb8ff513269498.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_be_in_type_list_timeseries_data_date_datetime__date___dbt_expectations_type_datetime_", "alias": "dbt_expectations_expect_column_1cfed4d5a72647b089bb8ff513269498", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_data"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_1cfed4d5a72647b089bb8ff513269498.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_1cfed4d5a72647b089bb8ff513269498"}, "created_at": 1672451563.494606, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('DATE_DAY' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATE_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP WITHOUT TIME ZONE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATE_TIMESTAMP' as TEXT) as relation_column,\n            cast('TIMESTAMP WITHOUT TIME ZONE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ROW_VALUE' as TEXT) as relation_column,\n            cast('DOUBLE PRECISION' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ROW_VALUE_LOG' as TEXT) as relation_column,\n            cast('DOUBLE PRECISION' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'DATE_DATETIME'\n            and\n            relation_column_type not in ('DATE', 'TIMESTAMP WITHOUT TIME ZONE')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "date_datetime", "file_key_name": "models.timeseries_data"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_row_values_to_have_recent_data_timeseries_data_date_timestamp__day__1.300ccbdad1": {"test_metadata": {"name": "expect_row_values_to_have_recent_data", "kwargs": {"datepart": "day", "interval": 1, "column_name": "date_timestamp", "model": "{{ get_where_subquery(ref('timeseries_data')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_row_values_to_have_recent_data", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_data"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_row_va_bd5bfd3704842cc90136c80223125d59", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_row_values_to_have_recent_data_timeseries_data_date_timestamp__day__1"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_row_values_to_have_recent_data_timeseries_data_date_timestamp__day__1.300ccbdad1", "raw_code": "{{ dbt_expectations.test_expect_row_values_to_have_recent_data(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_row_va_bd5bfd3704842cc90136c80223125d59\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_row_va_bd5bfd3704842cc90136c80223125d59.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_row_values_to_have_recent_data_timeseries_data_date_timestamp__day__1", "alias": "dbt_expectations_expect_row_va_bd5bfd3704842cc90136c80223125d59", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_data"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_row_va_bd5bfd3704842cc90136c80223125d59.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_row_va_bd5bfd3704842cc90136c80223125d59"}, "created_at": 1672451563.4991722, "compiled_code": "\n\n with max_recency as (\n\n    select max(cast(date_timestamp as timestamp without time zone)) as max_timestamp\n    from\n        postgres.dbt_expectations_integration_tests.timeseries_data\n    where\n        -- to exclude erroneous future dates\n        cast(date_timestamp as timestamp without time zone) <= cast(\n    cast(now() as TIMESTAMP)\n        at time zone 'UTC' at time zone 'America/Los_Angeles' as TIMESTAMP\n)\n        \n)\nselect\n    *\nfrom\n    max_recency\nwhere\n    -- if the row_condition excludes all rows, we need to compare against a default date\n    -- to avoid false negatives\n    coalesce(max_timestamp, cast('1970-01-01' as timestamp without time zone))\n        <\n        cast(\n\n    cast(\n    cast(now() as TIMESTAMP)\n        at time zone 'UTC' at time zone 'America/Los_Angeles' as TIMESTAMP\n) + ((interval '1 day') * (-1))\n\n as timestamp without time zone)\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "date_timestamp", "file_key_name": "models.timeseries_data"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_in_type_list_timeseries_data_date_timestamp__date___dbt_expectations_type_timestamp_.4fc8b3eb42": {"test_metadata": {"name": "expect_column_values_to_be_in_type_list", "kwargs": {"column_type_list": ["date", "{{ dbt_expectations.type_timestamp() }}"], "column_name": "date_timestamp", "model": "{{ get_where_subquery(ref('timeseries_data')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_in_type_list", "macro.dbt.get_where_subquery", "macro.dbt_expectations.type_timestamp"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_data"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_390c5968031d3a12d537ab647e920d50", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_be_in_type_list_timeseries_data_date_timestamp__date___dbt_expectations_type_timestamp_"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_in_type_list_timeseries_data_date_timestamp__date___dbt_expectations_type_timestamp_.4fc8b3eb42", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_be_in_type_list(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_390c5968031d3a12d537ab647e920d50\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_390c5968031d3a12d537ab647e920d50.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_be_in_type_list_timeseries_data_date_timestamp__date___dbt_expectations_type_timestamp_", "alias": "dbt_expectations_expect_column_390c5968031d3a12d537ab647e920d50", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_data"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_390c5968031d3a12d537ab647e920d50.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_390c5968031d3a12d537ab647e920d50"}, "created_at": 1672451563.505888, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('DATE_DAY' as TEXT) as relation_column,\n            cast('DATE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATE_DATETIME' as TEXT) as relation_column,\n            cast('TIMESTAMP WITHOUT TIME ZONE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('DATE_TIMESTAMP' as TEXT) as relation_column,\n            cast('TIMESTAMP WITHOUT TIME ZONE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ROW_VALUE' as TEXT) as relation_column,\n            cast('DOUBLE PRECISION' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ROW_VALUE_LOG' as TEXT) as relation_column,\n            cast('DOUBLE PRECISION' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'DATE_TIMESTAMP'\n            and\n            relation_column_type not in ('DATE', 'TIMESTAMP WITHOUT TIME ZONE')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "date_timestamp", "file_key_name": "models.timeseries_data"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_within_n_stdevs_timeseries_data_row_value__6.be239e407d": {"test_metadata": {"name": "expect_column_values_to_be_within_n_stdevs", "kwargs": {"sigma_threshold": 6, "column_name": "row_value", "model": "{{ get_where_subquery(ref('timeseries_data')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_within_n_stdevs", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_data"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_5442cc4cdb958512adad79a84cf7a30c", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_be_within_n_stdevs_timeseries_data_row_value__6"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_within_n_stdevs_timeseries_data_row_value__6.be239e407d", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_be_within_n_stdevs(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_5442cc4cdb958512adad79a84cf7a30c\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_5442cc4cdb958512adad79a84cf7a30c.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_be_within_n_stdevs_timeseries_data_row_value__6", "alias": "dbt_expectations_expect_column_5442cc4cdb958512adad79a84cf7a30c", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_data"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_5442cc4cdb958512adad79a84cf7a30c.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_5442cc4cdb958512adad79a84cf7a30c"}, "created_at": 1672451563.510437, "compiled_code": "\n\nwith metric_values as (\n\n    select\n        \n        sum(row_value) as row_value\n    from\n        postgres.dbt_expectations_integration_tests.timeseries_data\n    \n\n),\nmetric_values_with_statistics as (\n\n    select\n        *,\n        avg(row_value) over() as row_value_average,\n        stddev(row_value) over() as row_value_stddev\n    from\n        metric_values\n\n),\nmetric_values_z_scores as (\n\n    select\n        *,\n        (row_value - row_value_average)/\n            nullif(row_value_stddev, 0) as row_value_sigma\n    from\n        metric_values_with_statistics\n\n)\nselect\n    *\nfrom\n    metric_values_z_scores\nwhere\n    abs(row_value_sigma) > 6", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "row_value", "file_key_name": "models.timeseries_data"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_within_n_stdevs_timeseries_data_row_value__date_day__6.9ddcf3af3d": {"test_metadata": {"name": "expect_column_values_to_be_within_n_stdevs", "kwargs": {"group_by": ["date_day"], "sigma_threshold": 6, "column_name": "row_value", "model": "{{ get_where_subquery(ref('timeseries_data')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_within_n_stdevs", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_data"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_6c5e8878b19a12bb9af553b452afd6e6", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_be_within_n_stdevs_timeseries_data_row_value__date_day__6"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_within_n_stdevs_timeseries_data_row_value__date_day__6.9ddcf3af3d", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_be_within_n_stdevs(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_6c5e8878b19a12bb9af553b452afd6e6\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_6c5e8878b19a12bb9af553b452afd6e6.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_be_within_n_stdevs_timeseries_data_row_value__date_day__6", "alias": "dbt_expectations_expect_column_6c5e8878b19a12bb9af553b452afd6e6", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_data"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_6c5e8878b19a12bb9af553b452afd6e6.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_6c5e8878b19a12bb9af553b452afd6e6"}, "created_at": 1672451563.520031, "compiled_code": "\n\nwith metric_values as (\n\n    select\n        date_day,\n        sum(row_value) as row_value\n    from\n        postgres.dbt_expectations_integration_tests.timeseries_data\n    group by 1\n\n),\nmetric_values_with_statistics as (\n\n    select\n        *,\n        avg(row_value) over() as row_value_average,\n        stddev(row_value) over() as row_value_stddev\n    from\n        metric_values\n\n),\nmetric_values_z_scores as (\n\n    select\n        *,\n        (row_value - row_value_average)/\n            nullif(row_value_stddev, 0) as row_value_sigma\n    from\n        metric_values_with_statistics\n\n)\nselect\n    *\nfrom\n    metric_values_z_scores\nwhere\n    abs(row_value_sigma) > 6", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "row_value", "file_key_name": "models.timeseries_data"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_within_n_moving_stdevs_timeseries_data_row_value__date_day__6__True.86019a24d0": {"test_metadata": {"name": "expect_column_values_to_be_within_n_moving_stdevs", "kwargs": {"date_column_name": "date_day", "sigma_threshold": 6, "take_logs": true, "column_name": "row_value", "model": "{{ get_where_subquery(ref('timeseries_data')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_within_n_moving_stdevs", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_data"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_05317438a1bc527d03e6fe64a03e8ebe", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "warn", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_be_within_n_moving_stdevs_timeseries_data_row_value__date_day__6__True"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_within_n_moving_stdevs_timeseries_data_row_value__date_day__6__True.86019a24d0", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_be_within_n_moving_stdevs(**_dbt_generic_test_kwargs) }}{{ config(severity=\"warn\",alias=\"dbt_expectations_expect_column_05317438a1bc527d03e6fe64a03e8ebe\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_05317438a1bc527d03e6fe64a03e8ebe.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_be_within_n_moving_stdevs_timeseries_data_row_value__date_day__6__True", "alias": "dbt_expectations_expect_column_05317438a1bc527d03e6fe64a03e8ebe", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_data"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_05317438a1bc527d03e6fe64a03e8ebe.sql", "build_path": null, "deferred": false, "unrendered_config": {"severity": "warn", "alias": "dbt_expectations_expect_column_05317438a1bc527d03e6fe64a03e8ebe"}, "created_at": 1672451563.5272949, "compiled_code": "with metric_values as (\n\n    with grouped_metric_values as (\n\n        select\n            date_trunc('day', date_day) as metric_period,\n            \n            sum(row_value) as agg_metric_value\n        from\n            postgres.dbt_expectations_integration_tests.timeseries_data\n        group by 1\n\n    )\n    , grouped_metric_values_with_priors as (\n\n        select\n            *,\n            lag(agg_metric_value, 1) over(\n                \n                order by metric_period) as prior_agg_metric_value\n    from\n        grouped_metric_values d\n\n    )\n    select\n        *,\n        coalesce(ln(nullif(agg_metric_value, 0)), 0)\n        -\n        coalesce(ln(nullif(prior_agg_metric_value, 0)), 0)\n        as metric_test_value\n    from\n        grouped_metric_values_with_priors d\n\n),\nmetric_moving_calcs as (\n\n    select\n        *,\n        avg(metric_test_value)\n            over(\n                    order by metric_period rows\n                    between 7 preceding and 1 preceding) as metric_test_rolling_average,\n        stddev(metric_test_value)\n            over(\n                    order by metric_period rows\n                    between 7 preceding and 1 preceding) as metric_test_rolling_stddev\n    from\n        metric_values\n\n),\nmetric_sigma as (\n\n    select\n        *,\n        (metric_test_value - metric_test_rolling_average) as metric_test_delta,\n        (metric_test_value - metric_test_rolling_average)/\n            nullif(metric_test_rolling_stddev, 0) as metric_test_sigma\n    from\n        metric_moving_calcs\n\n)\nselect\n    *\nfrom\n    metric_sigma\nwhere\n\n    metric_period >= cast(\n            \n\n    date_trunc('day', cast(\n    cast(now() as TIMESTAMP)\n        at time zone 'UTC' at time zone 'America/Los_Angeles' as TIMESTAMP\n)) + ((interval '1 day') * (-14))\n\n\n            as timestamp without time zone)\n    and\n    metric_period < date_trunc('day', cast(\n    cast(now() as TIMESTAMP)\n        at time zone 'UTC' at time zone 'America/Los_Angeles' as TIMESTAMP\n))\n    and\n\n    not (\n        metric_test_sigma >= -6 and\n        metric_test_sigma <= 6\n    )", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "row_value", "file_key_name": "models.timeseries_data"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_within_n_moving_stdevs_timeseries_data_row_value__date_day__6__False__True.c9497af54d": {"test_metadata": {"name": "expect_column_values_to_be_within_n_moving_stdevs", "kwargs": {"date_column_name": "date_day", "sigma_threshold": 6, "take_diffs": false, "take_logs": true, "column_name": "row_value", "model": "{{ get_where_subquery(ref('timeseries_data')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_within_n_moving_stdevs", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_data"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_b2ecd8aabb9bc2257792b420682a01f3", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "warn", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_be_within_n_moving_stdevs_timeseries_data_row_value__date_day__6__False__True"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_within_n_moving_stdevs_timeseries_data_row_value__date_day__6__False__True.c9497af54d", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_be_within_n_moving_stdevs(**_dbt_generic_test_kwargs) }}{{ config(severity=\"warn\",alias=\"dbt_expectations_expect_column_b2ecd8aabb9bc2257792b420682a01f3\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_b2ecd8aabb9bc2257792b420682a01f3.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_be_within_n_moving_stdevs_timeseries_data_row_value__date_day__6__False__True", "alias": "dbt_expectations_expect_column_b2ecd8aabb9bc2257792b420682a01f3", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_data"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_b2ecd8aabb9bc2257792b420682a01f3.sql", "build_path": null, "deferred": false, "unrendered_config": {"severity": "warn", "alias": "dbt_expectations_expect_column_b2ecd8aabb9bc2257792b420682a01f3"}, "created_at": 1672451563.548585, "compiled_code": "with metric_values as (\n\n    with grouped_metric_values as (\n\n        select\n            date_trunc('day', date_day) as metric_period,\n            \n            sum(row_value) as agg_metric_value\n        from\n            postgres.dbt_expectations_integration_tests.timeseries_data\n        group by 1\n\n    )\n\n    select\n        *,\n        coalesce(ln(nullif(agg_metric_value, 0)), 0)\n        as metric_test_value\n    from\n        grouped_metric_values\n\n),\nmetric_moving_calcs as (\n\n    select\n        *,\n        avg(metric_test_value)\n            over(\n                    order by metric_period rows\n                    between 7 preceding and 1 preceding) as metric_test_rolling_average,\n        stddev(metric_test_value)\n            over(\n                    order by metric_period rows\n                    between 7 preceding and 1 preceding) as metric_test_rolling_stddev\n    from\n        metric_values\n\n),\nmetric_sigma as (\n\n    select\n        *,\n        (metric_test_value - metric_test_rolling_average) as metric_test_delta,\n        (metric_test_value - metric_test_rolling_average)/\n            nullif(metric_test_rolling_stddev, 0) as metric_test_sigma\n    from\n        metric_moving_calcs\n\n)\nselect\n    *\nfrom\n    metric_sigma\nwhere\n\n    metric_period >= cast(\n            \n\n    date_trunc('day', cast(\n    cast(now() as TIMESTAMP)\n        at time zone 'UTC' at time zone 'America/Los_Angeles' as TIMESTAMP\n)) + ((interval '1 day') * (-14))\n\n\n            as timestamp without time zone)\n    and\n    metric_period < date_trunc('day', cast(\n    cast(now() as TIMESTAMP)\n        at time zone 'UTC' at time zone 'America/Los_Angeles' as TIMESTAMP\n))\n    and\n\n    not (\n        metric_test_sigma >= -6 and\n        metric_test_sigma <= 6\n    )", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "row_value", "file_key_name": "models.timeseries_data"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_table_columns_to_match_ordered_list_timeseries_data_date_day__date_datetime__date_timestamp__row_value__row_value_log.fea981f1fa": {"test_metadata": {"name": "expect_table_columns_to_match_ordered_list", "kwargs": {"column_list": ["date_day", "date_datetime", "date_timestamp", "row_value", "row_value_log"], "model": "{{ get_where_subquery(ref('timeseries_data')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_table_columns_to_match_ordered_list", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_data"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_table__621ef6bb868bff0c481d279dd102649c", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_table_columns_to_match_ordered_list_timeseries_data_date_day__date_datetime__date_timestamp__row_value__row_value_log"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_table_columns_to_match_ordered_list_timeseries_data_date_day__date_datetime__date_timestamp__row_value__row_value_log.fea981f1fa", "raw_code": "{{ dbt_expectations.test_expect_table_columns_to_match_ordered_list(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_table__621ef6bb868bff0c481d279dd102649c\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_table__621ef6bb868bff0c481d279dd102649c.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_table_columns_to_match_ordered_list_timeseries_data_date_day__date_datetime__date_timestamp__row_value__row_value_log", "alias": "dbt_expectations_expect_table__621ef6bb868bff0c481d279dd102649c", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_data"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_table__621ef6bb868bff0c481d279dd102649c.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_table__621ef6bb868bff0c481d279dd102649c"}, "created_at": 1672451563.556095, "compiled_code": "with relation_columns as (\n\n        \n        select\n            1 as relation_column_idx,\n            cast('DATE_DAY' as TEXT) as relation_column\n        union all\n        \n        select\n            2 as relation_column_idx,\n            cast('DATE_DATETIME' as TEXT) as relation_column\n        union all\n        \n        select\n            3 as relation_column_idx,\n            cast('DATE_TIMESTAMP' as TEXT) as relation_column\n        union all\n        \n        select\n            4 as relation_column_idx,\n            cast('ROW_VALUE' as TEXT) as relation_column\n        union all\n        \n        select\n            5 as relation_column_idx,\n            cast('ROW_VALUE_LOG' as TEXT) as relation_column\n        \n        \n    ),\n    input_columns as (\n\n        \n        select\n            1 as input_column_idx,\n            cast('DATE_DAY' as TEXT) as input_column\n        union all\n        \n        select\n            2 as input_column_idx,\n            cast('DATE_DATETIME' as TEXT) as input_column\n        union all\n        \n        select\n            3 as input_column_idx,\n            cast('DATE_TIMESTAMP' as TEXT) as input_column\n        union all\n        \n        select\n            4 as input_column_idx,\n            cast('ROW_VALUE' as TEXT) as input_column\n        union all\n        \n        select\n            5 as input_column_idx,\n            cast('ROW_VALUE_LOG' as TEXT) as input_column\n        \n        \n    )\n    select *\n    from\n        relation_columns r\n        full outer join\n        input_columns i on r.relation_column = i.input_column and r.relation_column_idx = i.input_column_idx\n    where\n        -- catch any column in input list that is not in the sequence of table columns\n        -- or any table column that is not in the input sequence\n        r.relation_column is null or\n        i.input_column is null", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null, "file_key_name": "models.timeseries_data"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_distinct_count_to_equal_other_table_timeseries_data_date_day__date_day__ref_timeseries_data_extended_.668a389f21": {"test_metadata": {"name": "expect_column_distinct_count_to_equal_other_table", "kwargs": {"column_name": "date_day", "compare_model": "ref(\"timeseries_data_extended\")", "compare_column_name": "date_day", "model": "{{ get_where_subquery(ref('timeseries_data')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_distinct_count_to_equal_other_table", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_data_extended", "model.dbt_expectations_integration_tests.timeseries_data"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_533122a91f29765fd6848c3ff572a229", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_distinct_count_to_equal_other_table_timeseries_data_date_day__date_day__ref_timeseries_data_extended_"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_distinct_count_to_equal_other_table_timeseries_data_date_day__date_day__ref_timeseries_data_extended_.668a389f21", "raw_code": "{{ dbt_expectations.test_expect_column_distinct_count_to_equal_other_table(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_533122a91f29765fd6848c3ff572a229\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_533122a91f29765fd6848c3ff572a229.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_distinct_count_to_equal_other_table_timeseries_data_date_day__date_day__ref_timeseries_data_extended_", "alias": "dbt_expectations_expect_column_533122a91f29765fd6848c3ff572a229", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_data_extended"], ["timeseries_data"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_533122a91f29765fd6848c3ff572a229.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_533122a91f29765fd6848c3ff572a229"}, "created_at": 1672451563.5662599, "compiled_code": "\n    with a as (\n        \n    select\n        \n        count(distinct date_day) as expression\n    from\n        postgres.dbt_expectations_integration_tests.timeseries_data\n    \n\n    ),\n    b as (\n        \n    select\n        \n        count(distinct date_day) as expression\n    from\n        postgres.dbt_expectations_integration_tests.timeseries_data_extended\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null, "file_key_name": "models.timeseries_data"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_distinct_count_to_equal_other_table_timeseries_data_date_day.79cb16c1eb": {"test_metadata": {"name": "expect_column_distinct_count_to_equal_other_table", "kwargs": {"column_name": "date_day", "model": "{{ get_where_subquery(ref('timeseries_data')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_distinct_count_to_equal_other_table", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_data"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_ecf05a8ee93aef75b0e34757b4fdec84", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_distinct_count_to_equal_other_table_timeseries_data_date_day"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_distinct_count_to_equal_other_table_timeseries_data_date_day.79cb16c1eb", "raw_code": "{{ dbt_expectations.test_expect_column_distinct_count_to_equal_other_table(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_ecf05a8ee93aef75b0e34757b4fdec84\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_ecf05a8ee93aef75b0e34757b4fdec84.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_distinct_count_to_equal_other_table_timeseries_data_date_day", "alias": "dbt_expectations_expect_column_ecf05a8ee93aef75b0e34757b4fdec84", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_data"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_ecf05a8ee93aef75b0e34757b4fdec84.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_ecf05a8ee93aef75b0e34757b4fdec84"}, "created_at": 1672451563.571785, "compiled_code": "\n    with a as (\n        \n    select\n        \n        count(distinct date_day) as expression\n    from\n        postgres.dbt_expectations_integration_tests.timeseries_data\n    \n\n    ),\n    b as (\n        \n    select\n        \n        count(distinct date_day) as expression\n    from\n        postgres.dbt_expectations_integration_tests.timeseries_data\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null, "file_key_name": "models.timeseries_data"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_row_values_to_have_data_for_every_n_datepart_timeseries_data_date_day__day.910ac3a171": {"test_metadata": {"name": "expect_row_values_to_have_data_for_every_n_datepart", "kwargs": {"date_col": "date_day", "date_part": "day", "model": "{{ get_where_subquery(ref('timeseries_data')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_row_values_to_have_data_for_every_n_datepart", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_data"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_row_va_71f4b45998e8bf5ad45db7ce6b2f0ea0", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_row_values_to_have_data_for_every_n_datepart_timeseries_data_date_day__day"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_row_values_to_have_data_for_every_n_datepart_timeseries_data_date_day__day.910ac3a171", "raw_code": "{{ dbt_expectations.test_expect_row_values_to_have_data_for_every_n_datepart(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_row_va_71f4b45998e8bf5ad45db7ce6b2f0ea0\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_row_va_71f4b45998e8bf5ad45db7ce6b2f0ea0.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_row_values_to_have_data_for_every_n_datepart_timeseries_data_date_day__day", "alias": "dbt_expectations_expect_row_va_71f4b45998e8bf5ad45db7ce6b2f0ea0", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_data"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_row_va_71f4b45998e8bf5ad45db7ce6b2f0ea0.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_row_va_71f4b45998e8bf5ad45db7ce6b2f0ea0"}, "created_at": 1672451563.575954, "compiled_code": "\n\n\n    \n\n\n\n\n\n\n\n\n\nwith base_dates as (\n\n    \n    with date_spine as\n(\n\n    \n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n     + \n    \n    p8.generated_number * power(2, 8)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 366\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n    cast('2021-12-29' as TIMESTAMP) + ((interval '1 day') * (row_number() over (order by 1) - 1))\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= cast('2022-12-30' as TIMESTAMP)\n\n)\n\nselect * from filtered\n\n\n\n)\nselect\n    cast(d.date_day as TIMESTAMP) as date_day\nfrom\n    date_spine d\n\n\n    \n\n),\nmodel_data as (\n\n    select\n    \n\n        cast(date_trunc('day', date_day) as timestamp without time zone) as date_day,\n\n    \n\n        count(*) as row_cnt\n    from\n        postgres.dbt_expectations_integration_tests.timeseries_data f\n    \n    group by\n        date_day\n\n),\n\nfinal as (\n\n    select\n        cast(d.date_day as timestamp without time zone) as date_day,\n        case when f.date_day is null then true else false end as is_missing,\n        coalesce(f.row_cnt, 0) as row_cnt\n    from\n        base_dates d\n        left join\n        model_data f on cast(d.date_day as timestamp without time zone) = f.date_day\n)\nselect\n    *\nfrom final\nwhere row_cnt = 0\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null, "file_key_name": "models.timeseries_data"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_row_values_to_have_data_for_every_n_datepart_timeseries_data_date_day__day__not_date_day_2021_10_19_.39ae519ce7": {"test_metadata": {"name": "expect_row_values_to_have_data_for_every_n_datepart", "kwargs": {"date_col": "date_day", "date_part": "day", "exclusion_condition": "not(date_day = '2021-10-19')", "model": "{{ get_where_subquery(ref('timeseries_data')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_row_values_to_have_data_for_every_n_datepart", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_data"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_row_va_0bed3b6651bb9f7221c899e2d56e5f96", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_row_values_to_have_data_for_every_n_datepart_timeseries_data_date_day__day__not_date_day_2021_10_19_"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_row_values_to_have_data_for_every_n_datepart_timeseries_data_date_day__day__not_date_day_2021_10_19_.39ae519ce7", "raw_code": "{{ dbt_expectations.test_expect_row_values_to_have_data_for_every_n_datepart(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_row_va_0bed3b6651bb9f7221c899e2d56e5f96\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_row_va_0bed3b6651bb9f7221c899e2d56e5f96.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_row_values_to_have_data_for_every_n_datepart_timeseries_data_date_day__day__not_date_day_2021_10_19_", "alias": "dbt_expectations_expect_row_va_0bed3b6651bb9f7221c899e2d56e5f96", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_data"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_row_va_0bed3b6651bb9f7221c899e2d56e5f96.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_row_va_0bed3b6651bb9f7221c899e2d56e5f96"}, "created_at": 1672451563.5939898, "compiled_code": "\n\n\n    \n\n\n\n\n\n\n\n\n\nwith base_dates as (\n\n    \n    with date_spine as\n(\n\n    \n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n     + \n    \n    p8.generated_number * power(2, 8)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 366\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n    cast('2021-12-29' as TIMESTAMP) + ((interval '1 day') * (row_number() over (order by 1) - 1))\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= cast('2022-12-30' as TIMESTAMP)\n\n)\n\nselect * from filtered\n\n\n\n)\nselect\n    cast(d.date_day as TIMESTAMP) as date_day\nfrom\n    date_spine d\n\n\n    \n\n),\nmodel_data as (\n\n    select\n    \n\n        cast(date_trunc('day', date_day) as timestamp without time zone) as date_day,\n\n    \n\n        count(*) as row_cnt\n    from\n        postgres.dbt_expectations_integration_tests.timeseries_data f\n    \n    group by\n        date_day\n\n),\n\nfinal as (\n\n    select\n        cast(d.date_day as timestamp without time zone) as date_day,\n        case when f.date_day is null then true else false end as is_missing,\n        coalesce(f.row_cnt, 0) as row_cnt\n    from\n        base_dates d\n        left join\n        model_data f on cast(d.date_day as timestamp without time zone) = f.date_day\n)\nselect\n    *\nfrom final\nwhere row_cnt = 0\n\n  and not(date_day = '2021-10-19')\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null, "file_key_name": "models.timeseries_data"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_row_values_to_have_data_for_every_n_datepart_timeseries_data_date_day__day___modules_datetime_date_today_modules_datetime_timedelta_2____modules_datetime_date_today_modules_datetime_timedelta_365_.8fb9b2b260": {"test_metadata": {"name": "expect_row_values_to_have_data_for_every_n_datepart", "kwargs": {"date_col": "date_day", "date_part": "day", "test_start_date": "{{ modules.datetime.date.today() - modules.datetime.timedelta(365) }}", "test_end_date": "{{ modules.datetime.date.today() - modules.datetime.timedelta(2) }}", "model": "{{ get_where_subquery(ref('timeseries_data')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_row_values_to_have_data_for_every_n_datepart", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_data"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_row_va_c357ce5dc518972cc5fc41269c7373ae", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_row_values_to_have_data_for_every_n_datepart_timeseries_data_date_day__day___modules_datetime_date_today_modules_datetime_timedelta_2____modules_datetime_date_today_modules_datetime_timedelta_365_"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_row_values_to_have_data_for_every_n_datepart_timeseries_data_date_day__day___modules_datetime_date_today_modules_datetime_timedelta_2____modules_datetime_date_today_modules_datetime_timedelta_365_.8fb9b2b260", "raw_code": "{{ dbt_expectations.test_expect_row_values_to_have_data_for_every_n_datepart(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_row_va_c357ce5dc518972cc5fc41269c7373ae\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_row_va_c357ce5dc518972cc5fc41269c7373ae.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_row_values_to_have_data_for_every_n_datepart_timeseries_data_date_day__day___modules_datetime_date_today_modules_datetime_timedelta_2____modules_datetime_date_today_modules_datetime_timedelta_365_", "alias": "dbt_expectations_expect_row_va_c357ce5dc518972cc5fc41269c7373ae", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_data"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_row_va_c357ce5dc518972cc5fc41269c7373ae.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_row_va_c357ce5dc518972cc5fc41269c7373ae"}, "created_at": 1672451563.599663, "compiled_code": "\n\n\n\n\n\n\n\n\n\n\n\nwith base_dates as (\n\n    \n    with date_spine as\n(\n\n    \n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n     + \n    \n    p8.generated_number * power(2, 8)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 363\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n    cast('2022-01-03' as TIMESTAMP) + ((interval '1 day') * (row_number() over (order by 1) - 1))\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= cast('2023-01-01' as TIMESTAMP)\n\n)\n\nselect * from filtered\n\n\n\n)\nselect\n    cast(d.date_day as TIMESTAMP) as date_day\nfrom\n    date_spine d\n\n\n    \n\n),\nmodel_data as (\n\n    select\n    \n\n        cast(date_trunc('day', date_day) as timestamp without time zone) as date_day,\n\n    \n\n        count(*) as row_cnt\n    from\n        postgres.dbt_expectations_integration_tests.timeseries_data f\n    \n    group by\n        date_day\n\n),\n\nfinal as (\n\n    select\n        cast(d.date_day as timestamp without time zone) as date_day,\n        case when f.date_day is null then true else false end as is_missing,\n        coalesce(f.row_cnt, 0) as row_cnt\n    from\n        base_dates d\n        left join\n        model_data f on cast(d.date_day as timestamp without time zone) = f.date_day\n)\nselect\n    *\nfrom final\nwhere row_cnt = 0\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null, "file_key_name": "models.timeseries_data"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_row_values_to_have_recent_data_timeseries_data_extended_date_day__day__1.918ff17d7d": {"test_metadata": {"name": "expect_row_values_to_have_recent_data", "kwargs": {"datepart": "day", "interval": 1, "column_name": "date_day", "model": "{{ get_where_subquery(ref('timeseries_data_extended')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_row_values_to_have_recent_data", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_data_extended"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_row_va_31021e665736eb4eeb7b81c8a3d40755", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_row_values_to_have_recent_data_timeseries_data_extended_date_day__day__1"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_row_values_to_have_recent_data_timeseries_data_extended_date_day__day__1.918ff17d7d", "raw_code": "{{ dbt_expectations.test_expect_row_values_to_have_recent_data(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_row_va_31021e665736eb4eeb7b81c8a3d40755\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_row_va_31021e665736eb4eeb7b81c8a3d40755.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_row_values_to_have_recent_data_timeseries_data_extended_date_day__day__1", "alias": "dbt_expectations_expect_row_va_31021e665736eb4eeb7b81c8a3d40755", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_data_extended"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_row_va_31021e665736eb4eeb7b81c8a3d40755.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_row_va_31021e665736eb4eeb7b81c8a3d40755"}, "created_at": 1672451563.6079402, "compiled_code": "\n\n with max_recency as (\n\n    select max(cast(date_day as timestamp without time zone)) as max_timestamp\n    from\n        postgres.dbt_expectations_integration_tests.timeseries_data_extended\n    where\n        -- to exclude erroneous future dates\n        cast(date_day as timestamp without time zone) <= cast(\n    cast(now() as TIMESTAMP)\n        at time zone 'UTC' at time zone 'America/Los_Angeles' as TIMESTAMP\n)\n        \n)\nselect\n    *\nfrom\n    max_recency\nwhere\n    -- if the row_condition excludes all rows, we need to compare against a default date\n    -- to avoid false negatives\n    coalesce(max_timestamp, cast('1970-01-01' as timestamp without time zone))\n        <\n        cast(\n\n    cast(\n    cast(now() as TIMESTAMP)\n        at time zone 'UTC' at time zone 'America/Los_Angeles' as TIMESTAMP\n) + ((interval '1 day') * (-1))\n\n as timestamp without time zone)\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "date_day", "file_key_name": "models.timeseries_data_extended"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_of_type_timeseries_data_extended_date_day___dbt_expectations_type_datetime_.3377fc291f": {"test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "{{ dbt_expectations.type_datetime() }}", "column_name": "date_day", "model": "{{ get_where_subquery(ref('timeseries_data_extended')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery", "macro.dbt_expectations.type_datetime"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_data_extended"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_b11cefb7a4df24c6744f6a652502dd8d", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_be_of_type_timeseries_data_extended_date_day___dbt_expectations_type_datetime_"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_of_type_timeseries_data_extended_date_day___dbt_expectations_type_datetime_.3377fc291f", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_b11cefb7a4df24c6744f6a652502dd8d\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_b11cefb7a4df24c6744f6a652502dd8d.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_be_of_type_timeseries_data_extended_date_day___dbt_expectations_type_datetime_", "alias": "dbt_expectations_expect_column_b11cefb7a4df24c6744f6a652502dd8d", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_data_extended"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_b11cefb7a4df24c6744f6a652502dd8d.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_b11cefb7a4df24c6744f6a652502dd8d"}, "created_at": 1672451563.613913, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('DATE_DAY' as TEXT) as relation_column,\n            cast('TIMESTAMP WITHOUT TIME ZONE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ROW_VALUE' as TEXT) as relation_column,\n            cast('DOUBLE PRECISION' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ROW_VALUE_LOG' as TEXT) as relation_column,\n            cast('DOUBLE PRECISION' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'DATE_DAY'\n            and\n            relation_column_type not in ('TIMESTAMP WITHOUT TIME ZONE')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "date_day", "file_key_name": "models.timeseries_data_extended"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_in_type_list_timeseries_data_extended_date_day__date___dbt_expectations_type_datetime_.64544aba59": {"test_metadata": {"name": "expect_column_values_to_be_in_type_list", "kwargs": {"column_type_list": ["date", "{{ dbt_expectations.type_datetime() }}"], "column_name": "date_day", "model": "{{ get_where_subquery(ref('timeseries_data_extended')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_in_type_list", "macro.dbt.get_where_subquery", "macro.dbt_expectations.type_datetime"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_data_extended"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_e6bd8a874a72fd7d31719d3d13064790", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_be_in_type_list_timeseries_data_extended_date_day__date___dbt_expectations_type_datetime_"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_in_type_list_timeseries_data_extended_date_day__date___dbt_expectations_type_datetime_.64544aba59", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_be_in_type_list(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_e6bd8a874a72fd7d31719d3d13064790\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_e6bd8a874a72fd7d31719d3d13064790.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_be_in_type_list_timeseries_data_extended_date_day__date___dbt_expectations_type_datetime_", "alias": "dbt_expectations_expect_column_e6bd8a874a72fd7d31719d3d13064790", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_data_extended"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_e6bd8a874a72fd7d31719d3d13064790.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_e6bd8a874a72fd7d31719d3d13064790"}, "created_at": 1672451563.619835, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('DATE_DAY' as TEXT) as relation_column,\n            cast('TIMESTAMP WITHOUT TIME ZONE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ROW_VALUE' as TEXT) as relation_column,\n            cast('DOUBLE PRECISION' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ROW_VALUE_LOG' as TEXT) as relation_column,\n            cast('DOUBLE PRECISION' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'DATE_DAY'\n            and\n            relation_column_type not in ('DATE', 'TIMESTAMP WITHOUT TIME ZONE')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "date_day", "file_key_name": "models.timeseries_data_extended"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_distinct_count_to_equal_timeseries_data_extended_row_value__date_day_dbt_date_yesterday___10.633f73d315": {"test_metadata": {"name": "expect_column_distinct_count_to_equal", "kwargs": {"row_condition": "date_day = {{ dbt_date.yesterday() }}", "value": 10, "column_name": "row_value", "model": "{{ get_where_subquery(ref('timeseries_data_extended')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_distinct_count_to_equal", "macro.dbt.get_where_subquery", "macro.dbt_date.yesterday"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_data_extended"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_5962522b7fc265dccebfd2e53995c849", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_distinct_count_to_equal_timeseries_data_extended_row_value__date_day_dbt_date_yesterday___10"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_distinct_count_to_equal_timeseries_data_extended_row_value__date_day_dbt_date_yesterday___10.633f73d315", "raw_code": "{{ dbt_expectations.test_expect_column_distinct_count_to_equal(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_5962522b7fc265dccebfd2e53995c849\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_5962522b7fc265dccebfd2e53995c849.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_distinct_count_to_equal_timeseries_data_extended_row_value__date_day_dbt_date_yesterday___10", "alias": "dbt_expectations_expect_column_5962522b7fc265dccebfd2e53995c849", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_data_extended"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_5962522b7fc265dccebfd2e53995c849.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_5962522b7fc265dccebfd2e53995c849"}, "created_at": 1672451563.624508, "compiled_code": "\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \ncount(distinct row_value) = 10\n as expression\n\n\n    from postgres.dbt_expectations_integration_tests.timeseries_data_extended\n    where\n        date_day = cast(\n\n    cast(cast(\n    cast(now() as TIMESTAMP)\n        at time zone 'UTC' at time zone 'America/Los_Angeles' as TIMESTAMP\n) as date) + ((interval '1 day') * (-1))\n\n as date)\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "row_value", "file_key_name": "models.timeseries_data_extended"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_distinct_count_to_be_greater_than_timeseries_data_extended_row_value__date_day_dbt_date_yesterday___1.ab45a07e5c": {"test_metadata": {"name": "expect_column_distinct_count_to_be_greater_than", "kwargs": {"row_condition": "date_day = {{ dbt_date.yesterday() }}", "value": 1, "column_name": "row_value", "model": "{{ get_where_subquery(ref('timeseries_data_extended')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_distinct_count_to_be_greater_than", "macro.dbt.get_where_subquery", "macro.dbt_date.yesterday"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_data_extended"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_eba4a4c027cd681bc97d36e2e9320fe2", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_distinct_count_to_be_greater_than_timeseries_data_extended_row_value__date_day_dbt_date_yesterday___1"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_distinct_count_to_be_greater_than_timeseries_data_extended_row_value__date_day_dbt_date_yesterday___1.ab45a07e5c", "raw_code": "{{ dbt_expectations.test_expect_column_distinct_count_to_be_greater_than(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_eba4a4c027cd681bc97d36e2e9320fe2\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_eba4a4c027cd681bc97d36e2e9320fe2.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_distinct_count_to_be_greater_than_timeseries_data_extended_row_value__date_day_dbt_date_yesterday___1", "alias": "dbt_expectations_expect_column_eba4a4c027cd681bc97d36e2e9320fe2", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_data_extended"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_eba4a4c027cd681bc97d36e2e9320fe2.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_eba4a4c027cd681bc97d36e2e9320fe2"}, "created_at": 1672451563.630916, "compiled_code": "\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \ncount(distinct row_value) > 1\n as expression\n\n\n    from postgres.dbt_expectations_integration_tests.timeseries_data_extended\n    where\n        date_day = cast(\n\n    cast(cast(\n    cast(now() as TIMESTAMP)\n        at time zone 'UTC' at time zone 'America/Los_Angeles' as TIMESTAMP\n) as date) + ((interval '1 day') * (-1))\n\n as date)\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "row_value", "file_key_name": "models.timeseries_data_extended"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_distinct_count_to_be_less_than_timeseries_data_extended_row_value__date_day_dbt_date_yesterday___11.a972053a0b": {"test_metadata": {"name": "expect_column_distinct_count_to_be_less_than", "kwargs": {"value": 11, "row_condition": "date_day = {{ dbt_date.yesterday() }}", "column_name": "row_value", "model": "{{ get_where_subquery(ref('timeseries_data_extended')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_distinct_count_to_be_less_than", "macro.dbt.get_where_subquery", "macro.dbt_date.yesterday"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_data_extended"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_bbd6ab0eb47c6ec07059ed59a7869434", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_distinct_count_to_be_less_than_timeseries_data_extended_row_value__date_day_dbt_date_yesterday___11"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_distinct_count_to_be_less_than_timeseries_data_extended_row_value__date_day_dbt_date_yesterday___11.a972053a0b", "raw_code": "{{ dbt_expectations.test_expect_column_distinct_count_to_be_less_than(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_bbd6ab0eb47c6ec07059ed59a7869434\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_bbd6ab0eb47c6ec07059ed59a7869434.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_distinct_count_to_be_less_than_timeseries_data_extended_row_value__date_day_dbt_date_yesterday___11", "alias": "dbt_expectations_expect_column_bbd6ab0eb47c6ec07059ed59a7869434", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_data_extended"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_bbd6ab0eb47c6ec07059ed59a7869434.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_bbd6ab0eb47c6ec07059ed59a7869434"}, "created_at": 1672451563.638304, "compiled_code": "\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \ncount(distinct row_value) < 11\n as expression\n\n\n    from postgres.dbt_expectations_integration_tests.timeseries_data_extended\n    where\n        date_day = cast(\n\n    cast(cast(\n    cast(now() as TIMESTAMP)\n        at time zone 'UTC' at time zone 'America/Los_Angeles' as TIMESTAMP\n) as date) + ((interval '1 day') * (-1))\n\n as date)\n    \n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "row_value", "file_key_name": "models.timeseries_data_extended"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_within_n_moving_stdevs_timeseries_data_extended_row_value_log__cast_date_day_as_dbt_expectations_type_datetime___6__False.91749cfd51": {"test_metadata": {"name": "expect_column_values_to_be_within_n_moving_stdevs", "kwargs": {"date_column_name": "cast(date_day as {{ dbt_expectations.type_datetime() }})", "sigma_threshold": 6, "take_logs": false, "column_name": "row_value_log", "model": "{{ get_where_subquery(ref('timeseries_data_extended')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_within_n_moving_stdevs", "macro.dbt.get_where_subquery", "macro.dbt_expectations.type_datetime"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_data_extended"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_7c415d95f2676319d2bdb189bcbcaa76", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "warn", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_be_within_n_moving_stdevs_timeseries_data_extended_row_value_log__cast_date_day_as_dbt_expectations_type_datetime___6__False"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_within_n_moving_stdevs_timeseries_data_extended_row_value_log__cast_date_day_as_dbt_expectations_type_datetime___6__False.91749cfd51", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_be_within_n_moving_stdevs(**_dbt_generic_test_kwargs) }}{{ config(severity=\"warn\",alias=\"dbt_expectations_expect_column_7c415d95f2676319d2bdb189bcbcaa76\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_7c415d95f2676319d2bdb189bcbcaa76.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_be_within_n_moving_stdevs_timeseries_data_extended_row_value_log__cast_date_day_as_dbt_expectations_type_datetime___6__False", "alias": "dbt_expectations_expect_column_7c415d95f2676319d2bdb189bcbcaa76", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_data_extended"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_7c415d95f2676319d2bdb189bcbcaa76.sql", "build_path": null, "deferred": false, "unrendered_config": {"severity": "warn", "alias": "dbt_expectations_expect_column_7c415d95f2676319d2bdb189bcbcaa76"}, "created_at": 1672451563.6449778, "compiled_code": "with metric_values as (\n\n    with grouped_metric_values as (\n\n        select\n            date_trunc('day', cast(date_day as timestamp without time zone)) as metric_period,\n            \n            sum(row_value_log) as agg_metric_value\n        from\n            postgres.dbt_expectations_integration_tests.timeseries_data_extended\n        group by 1\n\n    )\n    , grouped_metric_values_with_priors as (\n\n        select\n            *,\n            lag(agg_metric_value, 1) over(\n                \n                order by metric_period) as prior_agg_metric_value\n    from\n        grouped_metric_values d\n\n    )\n    select\n        *,\n        coalesce(agg_metric_value, 0)\n        -\n        coalesce(prior_agg_metric_value, 0)\n        as metric_test_value\n    from\n        grouped_metric_values_with_priors d\n\n),\nmetric_moving_calcs as (\n\n    select\n        *,\n        avg(metric_test_value)\n            over(\n                    order by metric_period rows\n                    between 7 preceding and 1 preceding) as metric_test_rolling_average,\n        stddev(metric_test_value)\n            over(\n                    order by metric_period rows\n                    between 7 preceding and 1 preceding) as metric_test_rolling_stddev\n    from\n        metric_values\n\n),\nmetric_sigma as (\n\n    select\n        *,\n        (metric_test_value - metric_test_rolling_average) as metric_test_delta,\n        (metric_test_value - metric_test_rolling_average)/\n            nullif(metric_test_rolling_stddev, 0) as metric_test_sigma\n    from\n        metric_moving_calcs\n\n)\nselect\n    *\nfrom\n    metric_sigma\nwhere\n\n    metric_period >= cast(\n            \n\n    date_trunc('day', cast(\n    cast(now() as TIMESTAMP)\n        at time zone 'UTC' at time zone 'America/Los_Angeles' as TIMESTAMP\n)) + ((interval '1 day') * (-14))\n\n\n            as timestamp without time zone)\n    and\n    metric_period < date_trunc('day', cast(\n    cast(now() as TIMESTAMP)\n        at time zone 'UTC' at time zone 'America/Los_Angeles' as TIMESTAMP\n))\n    and\n\n    not (\n        metric_test_sigma >= -6 and\n        metric_test_sigma <= 6\n    )", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "row_value_log", "file_key_name": "models.timeseries_data_extended"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_table_columns_to_match_ordered_list_timeseries_data_extended_date_day__row_value__row_value_log.c4fbe0bb2c": {"test_metadata": {"name": "expect_table_columns_to_match_ordered_list", "kwargs": {"column_list": ["date_day", "row_value", "row_value_log"], "model": "{{ get_where_subquery(ref('timeseries_data_extended')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_table_columns_to_match_ordered_list", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_data_extended"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_table__bb7eb401e16c326c4b1bb599f8343f12", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_table_columns_to_match_ordered_list_timeseries_data_extended_date_day__row_value__row_value_log"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_table_columns_to_match_ordered_list_timeseries_data_extended_date_day__row_value__row_value_log.c4fbe0bb2c", "raw_code": "{{ dbt_expectations.test_expect_table_columns_to_match_ordered_list(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_table__bb7eb401e16c326c4b1bb599f8343f12\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_table__bb7eb401e16c326c4b1bb599f8343f12.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_table_columns_to_match_ordered_list_timeseries_data_extended_date_day__row_value__row_value_log", "alias": "dbt_expectations_expect_table__bb7eb401e16c326c4b1bb599f8343f12", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_data_extended"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_table__bb7eb401e16c326c4b1bb599f8343f12.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_table__bb7eb401e16c326c4b1bb599f8343f12"}, "created_at": 1672451563.651895, "compiled_code": "with relation_columns as (\n\n        \n        select\n            1 as relation_column_idx,\n            cast('DATE_DAY' as TEXT) as relation_column\n        union all\n        \n        select\n            2 as relation_column_idx,\n            cast('ROW_VALUE' as TEXT) as relation_column\n        union all\n        \n        select\n            3 as relation_column_idx,\n            cast('ROW_VALUE_LOG' as TEXT) as relation_column\n        \n        \n    ),\n    input_columns as (\n\n        \n        select\n            1 as input_column_idx,\n            cast('DATE_DAY' as TEXT) as input_column\n        union all\n        \n        select\n            2 as input_column_idx,\n            cast('ROW_VALUE' as TEXT) as input_column\n        union all\n        \n        select\n            3 as input_column_idx,\n            cast('ROW_VALUE_LOG' as TEXT) as input_column\n        \n        \n    )\n    select *\n    from\n        relation_columns r\n        full outer join\n        input_columns i on r.relation_column = i.input_column and r.relation_column_idx = i.input_column_idx\n    where\n        -- catch any column in input list that is not in the sequence of table columns\n        -- or any table column that is not in the input sequence\n        r.relation_column is null or\n        i.input_column is null", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null, "file_key_name": "models.timeseries_data_extended"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_row_values_to_have_data_for_every_n_datepart_timeseries_data_extended_date_day__day.fef2d1f342": {"test_metadata": {"name": "expect_row_values_to_have_data_for_every_n_datepart", "kwargs": {"date_col": "date_day", "date_part": "day", "model": "{{ get_where_subquery(ref('timeseries_data_extended')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_row_values_to_have_data_for_every_n_datepart", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_data_extended"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_row_va_106138db9c125c3e786274b02c6b0b62", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_row_values_to_have_data_for_every_n_datepart_timeseries_data_extended_date_day__day"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_row_values_to_have_data_for_every_n_datepart_timeseries_data_extended_date_day__day.fef2d1f342", "raw_code": "{{ dbt_expectations.test_expect_row_values_to_have_data_for_every_n_datepart(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_row_va_106138db9c125c3e786274b02c6b0b62\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_row_va_106138db9c125c3e786274b02c6b0b62.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_row_values_to_have_data_for_every_n_datepart_timeseries_data_extended_date_day__day", "alias": "dbt_expectations_expect_row_va_106138db9c125c3e786274b02c6b0b62", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_data_extended"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_row_va_106138db9c125c3e786274b02c6b0b62.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_row_va_106138db9c125c3e786274b02c6b0b62"}, "created_at": 1672451563.6566231, "compiled_code": "\n\n\n    \n\n\n\n\n\n\n\n\n\nwith base_dates as (\n\n    \n    with date_spine as\n(\n\n    \n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n     + \n    \n    p8.generated_number * power(2, 8)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 366\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n    cast('2021-12-29' as TIMESTAMP) + ((interval '1 day') * (row_number() over (order by 1) - 1))\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= cast('2022-12-30' as TIMESTAMP)\n\n)\n\nselect * from filtered\n\n\n\n)\nselect\n    cast(d.date_day as TIMESTAMP) as date_day\nfrom\n    date_spine d\n\n\n    \n\n),\nmodel_data as (\n\n    select\n    \n\n        cast(date_trunc('day', date_day) as timestamp without time zone) as date_day,\n\n    \n\n        count(*) as row_cnt\n    from\n        postgres.dbt_expectations_integration_tests.timeseries_data_extended f\n    \n    group by\n        date_day\n\n),\n\nfinal as (\n\n    select\n        cast(d.date_day as timestamp without time zone) as date_day,\n        case when f.date_day is null then true else false end as is_missing,\n        coalesce(f.row_cnt, 0) as row_cnt\n    from\n        base_dates d\n        left join\n        model_data f on cast(d.date_day as timestamp without time zone) = f.date_day\n)\nselect\n    *\nfrom final\nwhere row_cnt = 0\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null, "file_key_name": "models.timeseries_data_extended"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_row_values_to_have_data_for_every_n_datepart_timeseries_data_extended_date_day__day__7.e436a78560": {"test_metadata": {"name": "expect_row_values_to_have_data_for_every_n_datepart", "kwargs": {"date_col": "date_day", "date_part": "day", "interval": 7, "model": "{{ get_where_subquery(ref('timeseries_data_extended')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_row_values_to_have_data_for_every_n_datepart", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_data_extended"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_row_va_a6fa9f8b8c0c964d84c26185c0dab7f3", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_row_values_to_have_data_for_every_n_datepart_timeseries_data_extended_date_day__day__7"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_row_values_to_have_data_for_every_n_datepart_timeseries_data_extended_date_day__day__7.e436a78560", "raw_code": "{{ dbt_expectations.test_expect_row_values_to_have_data_for_every_n_datepart(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_row_va_a6fa9f8b8c0c964d84c26185c0dab7f3\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_row_va_a6fa9f8b8c0c964d84c26185c0dab7f3.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_row_values_to_have_data_for_every_n_datepart_timeseries_data_extended_date_day__day__7", "alias": "dbt_expectations_expect_row_va_a6fa9f8b8c0c964d84c26185c0dab7f3", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_data_extended"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_row_va_a6fa9f8b8c0c964d84c26185c0dab7f3.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_row_va_a6fa9f8b8c0c964d84c26185c0dab7f3"}, "created_at": 1672451563.66112, "compiled_code": "\n\n\n    \n\n\n\n\n\n\n\n\n\nwith base_dates as (\n\n    \n    with date_spine as\n(\n\n    \n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n     + \n    \n    p8.generated_number * power(2, 8)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 366\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n    cast('2021-12-29' as TIMESTAMP) + ((interval '1 day') * (row_number() over (order by 1) - 1))\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= cast('2022-12-30' as TIMESTAMP)\n\n)\n\nselect * from filtered\n\n\n\n)\nselect\n    cast(d.date_day as TIMESTAMP) as date_day\nfrom\n    date_spine d\n\n\n    \n    \n    where mod(\n            cast(\n        ((date_day)::date - ('2021-12-29')::date)\n     as INT),\n            cast(7 as INT)\n        ) = 0\n    \n\n),\nmodel_data as (\n\n    select\n    \n        \n        \n\n    cast( date_trunc('day', date_day) as  timestamp without time zone) + ((interval '1 day') * (mod(\n                cast(\n        ((date_day)::date - ('2021-12-29')::date)\n     as INT ),\n                cast(7 as  INT )\n            ) * (-1)))\n\n as date_day,\n\n    \n\n        count(*) as row_cnt\n    from\n        postgres.dbt_expectations_integration_tests.timeseries_data_extended f\n    \n    group by\n        date_day\n\n),\n\nfinal as (\n\n    select\n        cast(d.date_day as timestamp without time zone) as date_day,\n        case when f.date_day is null then true else false end as is_missing,\n        coalesce(f.row_cnt, 0) as row_cnt\n    from\n        base_dates d\n        left join\n        model_data f on cast(d.date_day as timestamp without time zone) = f.date_day\n)\nselect\n    *\nfrom final\nwhere row_cnt = 0\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null, "file_key_name": "models.timeseries_data_extended"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_table_aggregation_to_equal_other_table_timeseries_data_extended_count___ref_timeseries_data___count_distinct_date_day_.aeece4e5bd": {"test_metadata": {"name": "expect_table_aggregation_to_equal_other_table", "kwargs": {"expression": "count(distinct date_day)", "compare_expression": "count(*)", "compare_model": "ref(\"timeseries_data\")", "model": "{{ get_where_subquery(ref('timeseries_data_extended')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_table_aggregation_to_equal_other_table", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_data", "model.dbt_expectations_integration_tests.timeseries_data_extended"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_table__73b6040fa6ff89e3ee01b7736d7f6a37", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_table_aggregation_to_equal_other_table_timeseries_data_extended_count___ref_timeseries_data___count_distinct_date_day_"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_table_aggregation_to_equal_other_table_timeseries_data_extended_count___ref_timeseries_data___count_distinct_date_day_.aeece4e5bd", "raw_code": "{{ dbt_expectations.test_expect_table_aggregation_to_equal_other_table(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_table__73b6040fa6ff89e3ee01b7736d7f6a37\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_table__73b6040fa6ff89e3ee01b7736d7f6a37.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_table_aggregation_to_equal_other_table_timeseries_data_extended_count___ref_timeseries_data___count_distinct_date_day_", "alias": "dbt_expectations_expect_table__73b6040fa6ff89e3ee01b7736d7f6a37", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_data"], ["timeseries_data_extended"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_table__73b6040fa6ff89e3ee01b7736d7f6a37.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_table__73b6040fa6ff89e3ee01b7736d7f6a37"}, "created_at": 1672451563.665696, "compiled_code": "\n    with a as (\n        \n    select\n        \n        count(distinct date_day) as expression\n    from\n        postgres.dbt_expectations_integration_tests.timeseries_data_extended\n    \n\n    ),\n    b as (\n        \n    select\n        \n        count(*) as expression\n    from\n        postgres.dbt_expectations_integration_tests.timeseries_data\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null, "file_key_name": "models.timeseries_data_extended"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_row_values_to_have_recent_data_timeseries_hourly_data_extended_date_hour__hour__24.a182297cd8": {"test_metadata": {"name": "expect_row_values_to_have_recent_data", "kwargs": {"datepart": "hour", "interval": 24, "column_name": "date_hour", "model": "{{ get_where_subquery(ref('timeseries_hourly_data_extended')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_row_values_to_have_recent_data", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_hourly_data_extended"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_row_va_e83053a68d0839ba2770091346e239e0", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_row_values_to_have_recent_data_timeseries_hourly_data_extended_date_hour__hour__24"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_row_values_to_have_recent_data_timeseries_hourly_data_extended_date_hour__hour__24.a182297cd8", "raw_code": "{{ dbt_expectations.test_expect_row_values_to_have_recent_data(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_row_va_e83053a68d0839ba2770091346e239e0\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_row_va_e83053a68d0839ba2770091346e239e0.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_row_values_to_have_recent_data_timeseries_hourly_data_extended_date_hour__hour__24", "alias": "dbt_expectations_expect_row_va_e83053a68d0839ba2770091346e239e0", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_hourly_data_extended"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_row_va_e83053a68d0839ba2770091346e239e0.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_row_va_e83053a68d0839ba2770091346e239e0"}, "created_at": 1672451563.674141, "compiled_code": "\n\n with max_recency as (\n\n    select max(cast(date_hour as timestamp without time zone)) as max_timestamp\n    from\n        postgres.dbt_expectations_integration_tests.timeseries_hourly_data_extended\n    where\n        -- to exclude erroneous future dates\n        cast(date_hour as timestamp without time zone) <= cast(\n    cast(now() as TIMESTAMP)\n        at time zone 'UTC' at time zone 'America/Los_Angeles' as TIMESTAMP\n)\n        \n)\nselect\n    *\nfrom\n    max_recency\nwhere\n    -- if the row_condition excludes all rows, we need to compare against a default date\n    -- to avoid false negatives\n    coalesce(max_timestamp, cast('1970-01-01' as timestamp without time zone))\n        <\n        cast(\n\n    cast(\n    cast(now() as TIMESTAMP)\n        at time zone 'UTC' at time zone 'America/Los_Angeles' as TIMESTAMP\n) + ((interval '1 hour') * (-24))\n\n as timestamp without time zone)\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "date_hour", "file_key_name": "models.timeseries_hourly_data_extended"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_of_type_timeseries_hourly_data_extended_date_hour___dbt_expectations_type_datetime_.fa9ac6d2a4": {"test_metadata": {"name": "expect_column_values_to_be_of_type", "kwargs": {"column_type": "{{ dbt_expectations.type_datetime() }}", "column_name": "date_hour", "model": "{{ get_where_subquery(ref('timeseries_hourly_data_extended')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro.dbt.get_where_subquery", "macro.dbt_expectations.type_datetime"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_hourly_data_extended"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_ac12dae9db4305a229f7b7a1c1e11ab7", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_be_of_type_timeseries_hourly_data_extended_date_hour___dbt_expectations_type_datetime_"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_of_type_timeseries_hourly_data_extended_date_hour___dbt_expectations_type_datetime_.fa9ac6d2a4", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_be_of_type(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_ac12dae9db4305a229f7b7a1c1e11ab7\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_ac12dae9db4305a229f7b7a1c1e11ab7.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_be_of_type_timeseries_hourly_data_extended_date_hour___dbt_expectations_type_datetime_", "alias": "dbt_expectations_expect_column_ac12dae9db4305a229f7b7a1c1e11ab7", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_hourly_data_extended"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_ac12dae9db4305a229f7b7a1c1e11ab7.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_ac12dae9db4305a229f7b7a1c1e11ab7"}, "created_at": 1672451563.679743, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('DATE_HOUR' as TEXT) as relation_column,\n            cast('TIMESTAMP WITHOUT TIME ZONE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ROW_VALUE' as TEXT) as relation_column,\n            cast('DOUBLE PRECISION' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ROW_VALUE_LOG' as TEXT) as relation_column,\n            cast('DOUBLE PRECISION' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'DATE_HOUR'\n            and\n            relation_column_type not in ('TIMESTAMP WITHOUT TIME ZONE')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "date_hour", "file_key_name": "models.timeseries_hourly_data_extended"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_in_type_list_timeseries_hourly_data_extended_date_hour___dbt_expectations_type_datetime_.e2af5fe244": {"test_metadata": {"name": "expect_column_values_to_be_in_type_list", "kwargs": {"column_type_list": ["{{ dbt_expectations.type_datetime() }}"], "column_name": "date_hour", "model": "{{ get_where_subquery(ref('timeseries_hourly_data_extended')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_in_type_list", "macro.dbt.get_where_subquery", "macro.dbt_expectations.type_datetime"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_hourly_data_extended"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_68bee2c1f6c7d428f2e8e7c95a91e931", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_be_in_type_list_timeseries_hourly_data_extended_date_hour___dbt_expectations_type_datetime_"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_in_type_list_timeseries_hourly_data_extended_date_hour___dbt_expectations_type_datetime_.e2af5fe244", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_be_in_type_list(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_68bee2c1f6c7d428f2e8e7c95a91e931\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_68bee2c1f6c7d428f2e8e7c95a91e931.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_be_in_type_list_timeseries_hourly_data_extended_date_hour___dbt_expectations_type_datetime_", "alias": "dbt_expectations_expect_column_68bee2c1f6c7d428f2e8e7c95a91e931", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_hourly_data_extended"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_68bee2c1f6c7d428f2e8e7c95a91e931.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_68bee2c1f6c7d428f2e8e7c95a91e931"}, "created_at": 1672451563.684157, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('DATE_HOUR' as TEXT) as relation_column,\n            cast('TIMESTAMP WITHOUT TIME ZONE' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ROW_VALUE' as TEXT) as relation_column,\n            cast('DOUBLE PRECISION' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ROW_VALUE_LOG' as TEXT) as relation_column,\n            cast('DOUBLE PRECISION' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'DATE_HOUR'\n            and\n            relation_column_type not in ('TIMESTAMP WITHOUT TIME ZONE')\n\n    )\n    select *\n    from test_data", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "date_hour", "file_key_name": "models.timeseries_hourly_data_extended"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_within_n_moving_stdevs_timeseries_hourly_data_extended_row_value_log__cast_date_hour_as_dbt_expectations_type_datetime___hour__6__False__12__48.c200505cc1": {"test_metadata": {"name": "expect_column_values_to_be_within_n_moving_stdevs", "kwargs": {"date_column_name": "cast(date_hour as {{ dbt_expectations.type_datetime() }})", "period": "hour", "trend_periods": 48, "test_periods": 12, "sigma_threshold": 6, "take_logs": false, "column_name": "row_value_log", "model": "{{ get_where_subquery(ref('timeseries_hourly_data_extended')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_within_n_moving_stdevs", "macro.dbt.get_where_subquery", "macro.dbt_expectations.type_datetime"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_hourly_data_extended"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_0493856fc462613817b49ef69dd9c58a", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "warn", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_be_within_n_moving_stdevs_timeseries_hourly_data_extended_row_value_log__cast_date_hour_as_dbt_expectations_type_datetime___hour__6__False__12__48"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_within_n_moving_stdevs_timeseries_hourly_data_extended_row_value_log__cast_date_hour_as_dbt_expectations_type_datetime___hour__6__False__12__48.c200505cc1", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_be_within_n_moving_stdevs(**_dbt_generic_test_kwargs) }}{{ config(severity=\"warn\",alias=\"dbt_expectations_expect_column_0493856fc462613817b49ef69dd9c58a\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_0493856fc462613817b49ef69dd9c58a.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_be_within_n_moving_stdevs_timeseries_hourly_data_extended_row_value_log__cast_date_hour_as_dbt_expectations_type_datetime___hour__6__False__12__48", "alias": "dbt_expectations_expect_column_0493856fc462613817b49ef69dd9c58a", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_hourly_data_extended"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_0493856fc462613817b49ef69dd9c58a.sql", "build_path": null, "deferred": false, "unrendered_config": {"severity": "warn", "alias": "dbt_expectations_expect_column_0493856fc462613817b49ef69dd9c58a"}, "created_at": 1672451563.689315, "compiled_code": "with metric_values as (\n\n    with grouped_metric_values as (\n\n        select\n            date_trunc('hour', cast(date_hour as timestamp without time zone)) as metric_period,\n            \n            sum(row_value_log) as agg_metric_value\n        from\n            postgres.dbt_expectations_integration_tests.timeseries_hourly_data_extended\n        group by 1\n\n    )\n    , grouped_metric_values_with_priors as (\n\n        select\n            *,\n            lag(agg_metric_value, 1) over(\n                \n                order by metric_period) as prior_agg_metric_value\n    from\n        grouped_metric_values d\n\n    )\n    select\n        *,\n        coalesce(agg_metric_value, 0)\n        -\n        coalesce(prior_agg_metric_value, 0)\n        as metric_test_value\n    from\n        grouped_metric_values_with_priors d\n\n),\nmetric_moving_calcs as (\n\n    select\n        *,\n        avg(metric_test_value)\n            over(\n                    order by metric_period rows\n                    between 48 preceding and 1 preceding) as metric_test_rolling_average,\n        stddev(metric_test_value)\n            over(\n                    order by metric_period rows\n                    between 48 preceding and 1 preceding) as metric_test_rolling_stddev\n    from\n        metric_values\n\n),\nmetric_sigma as (\n\n    select\n        *,\n        (metric_test_value - metric_test_rolling_average) as metric_test_delta,\n        (metric_test_value - metric_test_rolling_average)/\n            nullif(metric_test_rolling_stddev, 0) as metric_test_sigma\n    from\n        metric_moving_calcs\n\n)\nselect\n    *\nfrom\n    metric_sigma\nwhere\n\n    metric_period >= cast(\n            \n\n    date_trunc('hour', cast(\n    cast(now() as TIMESTAMP)\n        at time zone 'UTC' at time zone 'America/Los_Angeles' as TIMESTAMP\n)) + ((interval '1 hour') * (-12))\n\n\n            as timestamp without time zone)\n    and\n    metric_period < date_trunc('hour', cast(\n    cast(now() as TIMESTAMP)\n        at time zone 'UTC' at time zone 'America/Los_Angeles' as TIMESTAMP\n))\n    and\n\n    not (\n        metric_test_sigma >= -6 and\n        metric_test_sigma <= 6\n    )", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "row_value_log", "file_key_name": "models.timeseries_hourly_data_extended"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_row_values_to_have_data_for_every_n_datepart_timeseries_hourly_data_extended_date_hour__hour.5afac62404": {"test_metadata": {"name": "expect_row_values_to_have_data_for_every_n_datepart", "kwargs": {"date_col": "date_hour", "date_part": "hour", "model": "{{ get_where_subquery(ref('timeseries_hourly_data_extended')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_row_values_to_have_data_for_every_n_datepart", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.timeseries_hourly_data_extended"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_row_va_66b01d2da7995f5a7de822fb58e15ce7", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_row_values_to_have_data_for_every_n_datepart_timeseries_hourly_data_extended_date_hour__hour"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_row_values_to_have_data_for_every_n_datepart_timeseries_hourly_data_extended_date_hour__hour.5afac62404", "raw_code": "{{ dbt_expectations.test_expect_row_values_to_have_data_for_every_n_datepart(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_row_va_66b01d2da7995f5a7de822fb58e15ce7\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_row_va_66b01d2da7995f5a7de822fb58e15ce7.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_row_values_to_have_data_for_every_n_datepart_timeseries_hourly_data_extended_date_hour__hour", "alias": "dbt_expectations_expect_row_va_66b01d2da7995f5a7de822fb58e15ce7", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["timeseries_hourly_data_extended"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_row_va_66b01d2da7995f5a7de822fb58e15ce7.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_row_va_66b01d2da7995f5a7de822fb58e15ce7"}, "created_at": 1672451563.69627, "compiled_code": "\n\n\n    \n\n\n\n\n\n\n\n\n\nwith base_dates as (\n\n    \n    with date_spine as\n(\n\n    \n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 240.0\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n    cast('2022-12-20' as TIMESTAMP) + ((interval '1 hour') * (row_number() over (order by 1) - 1))\n\n\n    ) as date_hour\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_hour <= cast('2022-12-30' as TIMESTAMP)\n\n)\n\nselect * from filtered\n\n\n\n)\nselect\n    cast(d.date_hour as TIMESTAMP) as date_hour\nfrom\n    date_spine d\n\n\n    \n\n),\nmodel_data as (\n\n    select\n    \n\n        cast(date_trunc('hour', date_hour) as timestamp without time zone) as date_hour,\n\n    \n\n        count(*) as row_cnt\n    from\n        postgres.dbt_expectations_integration_tests.timeseries_hourly_data_extended f\n    \n    group by\n        date_hour\n\n),\n\nfinal as (\n\n    select\n        cast(d.date_hour as timestamp without time zone) as date_hour,\n        case when f.date_hour is null then true else false end as is_missing,\n        coalesce(f.row_cnt, 0) as row_cnt\n    from\n        base_dates d\n        left join\n        model_data f on cast(d.date_hour as timestamp without time zone) = f.date_hour\n)\nselect\n    *\nfrom final\nwhere row_cnt = 0\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": null, "file_key_name": "models.timeseries_hourly_data_extended"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_to_exist_data_test_1__idx.fe00acd806": {"test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_index": 1, "column_name": "idx", "model": "{{ get_where_subquery(ref('data_test')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.data_test"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_to_exist_data_test_1__idx"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_to_exist_data_test_1__idx.fe00acd806", "raw_code": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_to_exist_data_test_1__idx.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_to_exist_data_test_1__idx", "alias": "dbt_expectations_expect_column_to_exist_data_test_1__idx", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["data_test"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_to_exist_data_test_1__idx.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1672451563.701473, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('IDX' as TEXT) as column_name,\n            0 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "idx", "file_key_name": "models.data_test"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_unique_data_test_idx.1fedbd4c8c": {"test_metadata": {"name": "expect_column_values_to_be_unique", "kwargs": {"column_name": "idx", "model": "{{ get_where_subquery(ref('data_test')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.data_test"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_d6985a2dd161d3de837fd7a792e250ff", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_be_unique_data_test_idx"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_unique_data_test_idx.1fedbd4c8c", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_be_unique(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_d6985a2dd161d3de837fd7a792e250ff\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_d6985a2dd161d3de837fd7a792e250ff.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_be_unique_data_test_idx", "alias": "dbt_expectations_expect_column_d6985a2dd161d3de837fd7a792e250ff", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["data_test"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_d6985a2dd161d3de837fd7a792e250ff.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_d6985a2dd161d3de837fd7a792e250ff"}, "created_at": 1672451563.7092311, "compiled_code": "\n\n\n\n\nwith validation_errors as (\n\n    select\n        idx\n    from postgres.dbt_expectations_integration_tests.data_test\n    where\n        1=1\n        and \n    not (\n        idx is null\n        \n    )\n\n\n    \n    group by\n        idx\n    having count(*) > 1\n\n)\nselect * from validation_errors\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "idx", "file_key_name": "models.data_test"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_increasing_data_test_idx__idx.f1baf74a63": {"test_metadata": {"name": "expect_column_values_to_be_increasing", "kwargs": {"sort_column": "idx", "column_name": "idx", "model": "{{ get_where_subquery(ref('data_test')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_increasing", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.data_test"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_2aec33d274059303ee418d03cd5b0d49", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_be_increasing_data_test_idx__idx"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_increasing_data_test_idx__idx.f1baf74a63", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_be_increasing(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_2aec33d274059303ee418d03cd5b0d49\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_2aec33d274059303ee418d03cd5b0d49.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_be_increasing_data_test_idx__idx", "alias": "dbt_expectations_expect_column_2aec33d274059303ee418d03cd5b0d49", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["data_test"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_2aec33d274059303ee418d03cd5b0d49.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_2aec33d274059303ee418d03cd5b0d49"}, "created_at": 1672451563.7259579, "compiled_code": "with all_values as (\n\n    select\n        idx as sort_column,\n        idx as value_field\n    from postgres.dbt_expectations_integration_tests.data_test\n    \n\n),\nadd_lag_values as (\n\n    select\n        sort_column,\n        value_field,\n        lag(value_field) over(order by sort_column) as value_field_lag\n    from\n        all_values\n\n),\nvalidation_errors as (\n    select\n        *\n    from\n        add_lag_values\n    where\n        value_field_lag is not null\n        and\n        not (value_field > value_field_lag)\n\n)\nselect *\nfrom validation_errors\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "idx", "file_key_name": "models.data_test"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_to_exist_data_test_col_numeric_a.05ed4c08ef": {"test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_name": "col_numeric_a", "model": "{{ get_where_subquery(ref('data_test')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.data_test"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_to_exist_data_test_col_numeric_a"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_to_exist_data_test_col_numeric_a.05ed4c08ef", "raw_code": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_to_exist_data_test_col_numeric_a.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_to_exist_data_test_col_numeric_a", "alias": "dbt_expectations_expect_column_to_exist_data_test_col_numeric_a", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["data_test"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_to_exist_data_test_col_numeric_a.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1672451563.730179, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('COL_NUMERIC_A' as TEXT) as column_name,\n            2 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "col_numeric_a", "file_key_name": "models.data_test"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_to_exist_data_test_3__col_numeric_a.707ebd64f9": {"test_metadata": {"name": "expect_column_to_exist", "kwargs": {"column_index": 3, "column_name": "col_numeric_a", "model": "{{ get_where_subquery(ref('data_test')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_to_exist", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.data_test"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_4ac93c8961fe07fef8be60820d47a422", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_to_exist_data_test_3__col_numeric_a"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_to_exist_data_test_3__col_numeric_a.707ebd64f9", "raw_code": "{{ dbt_expectations.test_expect_column_to_exist(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_4ac93c8961fe07fef8be60820d47a422\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_4ac93c8961fe07fef8be60820d47a422.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_to_exist_data_test_3__col_numeric_a", "alias": "dbt_expectations_expect_column_4ac93c8961fe07fef8be60820d47a422", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["data_test"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_4ac93c8961fe07fef8be60820d47a422.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_4ac93c8961fe07fef8be60820d47a422"}, "created_at": 1672451563.734177, "compiled_code": "\n\n    with test_data as (\n\n        select\n            cast('COL_NUMERIC_A' as TEXT) as column_name,\n            2 as matching_column_index,\n            True as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "col_numeric_a", "file_key_name": "models.data_test"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_not_be_null_data_test_col_numeric_a.1c5c036a67": {"test_metadata": {"name": "expect_column_values_to_not_be_null", "kwargs": {"column_name": "col_numeric_a", "model": "{{ get_where_subquery(ref('data_test')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.data_test"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_f9cc2553c3f7be5306b0ba058123a38a", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_not_be_null_data_test_col_numeric_a"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_not_be_null_data_test_col_numeric_a.1c5c036a67", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_not_be_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_f9cc2553c3f7be5306b0ba058123a38a\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_f9cc2553c3f7be5306b0ba058123a38a.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_not_be_null_data_test_col_numeric_a", "alias": "dbt_expectations_expect_column_f9cc2553c3f7be5306b0ba058123a38a", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["data_test"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_f9cc2553c3f7be5306b0ba058123a38a.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_f9cc2553c3f7be5306b0ba058123a38a"}, "created_at": 1672451563.738069, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  col_numeric_a is not null as expression\n\n\n    from postgres.dbt_expectations_integration_tests.data_test\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "col_numeric_a", "file_key_name": "models.data_test"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_between_data_test_col_numeric_a__1__0.dd0c29c89d": {"test_metadata": {"name": "expect_column_values_to_be_between", "kwargs": {"min_value": 0, "max_value": 1, "column_name": "col_numeric_a", "model": "{{ get_where_subquery(ref('data_test')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_between", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.data_test"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_82e2a3dc577c3b6000c4507dea3c9f5c", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_be_between_data_test_col_numeric_a__1__0"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_between_data_test_col_numeric_a__1__0.dd0c29c89d", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_be_between(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_82e2a3dc577c3b6000c4507dea3c9f5c\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_82e2a3dc577c3b6000c4507dea3c9f5c.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_be_between_data_test_col_numeric_a__1__0", "alias": "dbt_expectations_expect_column_82e2a3dc577c3b6000c4507dea3c9f5c", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["data_test"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_82e2a3dc577c3b6000c4507dea3c9f5c.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_82e2a3dc577c3b6000c4507dea3c9f5c"}, "created_at": 1672451563.743571, "compiled_code": "\n\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and col_numeric_a >= 0 and col_numeric_a <= 1\n)\n as expression\n\n\n    from postgres.dbt_expectations_integration_tests.data_test\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "col_numeric_a", "file_key_name": "models.data_test"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_between_data_test_col_numeric_a__0.38e10ae5de": {"test_metadata": {"name": "expect_column_values_to_be_between", "kwargs": {"min_value": 0, "column_name": "col_numeric_a", "model": "{{ get_where_subquery(ref('data_test')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_between", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.data_test"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_33c7237f7ccbf6f7fbc046ab4847dd43", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_values_to_be_between_data_test_col_numeric_a__0"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_values_to_be_between_data_test_col_numeric_a__0.38e10ae5de", "raw_code": "{{ dbt_expectations.test_expect_column_values_to_be_between(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_33c7237f7ccbf6f7fbc046ab4847dd43\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_33c7237f7ccbf6f7fbc046ab4847dd43.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_values_to_be_between_data_test_col_numeric_a__0", "alias": "dbt_expectations_expect_column_33c7237f7ccbf6f7fbc046ab4847dd43", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["data_test"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_33c7237f7ccbf6f7fbc046ab4847dd43.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_33c7237f7ccbf6f7fbc046ab4847dd43"}, "created_at": 1672451563.755763, "compiled_code": "\n\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and col_numeric_a >= 0\n)\n as expression\n\n\n    from postgres.dbt_expectations_integration_tests.data_test\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "col_numeric_a", "file_key_name": "models.data_test"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_sum_to_be_between_data_test_col_numeric_a__3__1.768d8a3df1": {"test_metadata": {"name": "expect_column_sum_to_be_between", "kwargs": {"min_value": 1, "max_value": 3, "column_name": "col_numeric_a", "model": "{{ get_where_subquery(ref('data_test')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_sum_to_be_between", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.data_test"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_1a9fa430f4b86b3f240d87bd2aa95ac2", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_sum_to_be_between_data_test_col_numeric_a__3__1"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_sum_to_be_between_data_test_col_numeric_a__3__1.768d8a3df1", "raw_code": "{{ dbt_expectations.test_expect_column_sum_to_be_between(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_1a9fa430f4b86b3f240d87bd2aa95ac2\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_1a9fa430f4b86b3f240d87bd2aa95ac2.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_sum_to_be_between_data_test_col_numeric_a__3__1", "alias": "dbt_expectations_expect_column_1a9fa430f4b86b3f240d87bd2aa95ac2", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["data_test"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_1a9fa430f4b86b3f240d87bd2aa95ac2.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_1a9fa430f4b86b3f240d87bd2aa95ac2"}, "created_at": 1672451563.7604291, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and sum(col_numeric_a) >= 1 and sum(col_numeric_a) <= 3\n)\n as expression\n\n\n    from postgres.dbt_expectations_integration_tests.data_test\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "col_numeric_a", "file_key_name": "models.data_test"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_min_to_be_between_data_test_col_numeric_a__0__0.0b9263ab44": {"test_metadata": {"name": "expect_column_min_to_be_between", "kwargs": {"min_value": 0, "max_value": 0, "column_name": "col_numeric_a", "model": "{{ get_where_subquery(ref('data_test')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_min_to_be_between", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.data_test"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_0f21475a39564b7f0f28389630488e56", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_min_to_be_between_data_test_col_numeric_a__0__0"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_min_to_be_between_data_test_col_numeric_a__0__0.0b9263ab44", "raw_code": "{{ dbt_expectations.test_expect_column_min_to_be_between(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_0f21475a39564b7f0f28389630488e56\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_0f21475a39564b7f0f28389630488e56.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_min_to_be_between_data_test_col_numeric_a__0__0", "alias": "dbt_expectations_expect_column_0f21475a39564b7f0f28389630488e56", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["data_test"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_0f21475a39564b7f0f28389630488e56.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_0f21475a39564b7f0f28389630488e56"}, "created_at": 1672451563.76831, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and min(col_numeric_a) >= 0 and min(col_numeric_a) <= 0\n)\n as expression\n\n\n    from postgres.dbt_expectations_integration_tests.data_test\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "col_numeric_a", "file_key_name": "models.data_test"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_max_to_be_between_data_test_col_numeric_a__1__1.da51d2d9cb": {"test_metadata": {"name": "expect_column_max_to_be_between", "kwargs": {"min_value": 1, "max_value": 1, "column_name": "col_numeric_a", "model": "{{ get_where_subquery(ref('data_test')) }}"}, "namespace": "dbt_expectations"}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_max_to_be_between", "macro.dbt.get_where_subquery"], "nodes": ["model.dbt_expectations_integration_tests.data_test"]}, "config": {"enabled": true, "alias": "dbt_expectations_expect_column_3e45cc658bb26429cb14265549bb8aa4", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "postgres", "schema": "dbt_test__audit", "fqn": ["dbt_expectations_integration_tests", "schema_tests", "dbt_expectations_expect_column_max_to_be_between_data_test_col_numeric_a__1__1"], "unique_id": "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_max_to_be_between_data_test_col_numeric_a__1__1.da51d2d9cb", "raw_code": "{{ dbt_expectations.test_expect_column_max_to_be_between(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_expectations_expect_column_3e45cc658bb26429cb14265549bb8aa4\") }}", "language": "sql", "package_name": "dbt_expectations_integration_tests", "root_path": "/Users/claus/dev/calogica/dbt-expectations/integration_tests", "path": "dbt_expectations_expect_column_3e45cc658bb26429cb14265549bb8aa4.sql", "original_file_path": "models/schema_tests/schema.yml", "name": "dbt_expectations_expect_column_max_to_be_between_data_test_col_numeric_a__1__1", "alias": "dbt_expectations_expect_column_3e45cc658bb26429cb14265549bb8aa4", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["data_test"]], "sources": [], "metrics": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "compiled_path": "target/compiled/dbt_expectations_integration_tests/models/schema_tests/schema.yml/dbt_expectations_expect_column_3e45cc658bb26429cb14265549bb8aa4.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "dbt_expectations_expect_column_3e45cc658bb26429cb14265549bb8aa4"}, "created_at": 1672451563.774453, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and max(col_numeric_a) >= 1 and max(col_numeric_a) <= 1\n)\n as expression\n\n\n    from postgres.dbt_expectations_integration_tests.data_test\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "col_numeric_a", "file_key_name": "models.data_test"}, "test.dbt_expectations_integration_tests.dbt_expectations_expect_column_mean_to_be_between_data_test_col_numeric_a__1_5__0.885aa2d309": {"test_metadata": {"name": "expect_column_mean_to_be_between", "kwargs": {"min_value": 0, "max_value": 1.5, "column_name": "col_num